# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from dnac_api_client.models.device_inner_history_task_info import DeviceInnerHistoryTaskInfo  # noqa: F401,E501


class DeviceInnerRunSummaryList(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'details': 'str',
        'error_flag': 'bool',
        'history_task_info': 'DeviceInnerHistoryTaskInfo',
        'timestamp': 'int'
    }

    attribute_map = {
        'details': 'details',
        'error_flag': 'errorFlag',
        'history_task_info': 'historyTaskInfo',
        'timestamp': 'timestamp'
    }

    def __init__(self, details=None, error_flag=None, history_task_info=None, timestamp=None):  # noqa: E501
        """DeviceInnerRunSummaryList - a model defined in Swagger"""  # noqa: E501

        self._details = None
        self._error_flag = None
        self._history_task_info = None
        self._timestamp = None
        self.discriminator = None

        if details is not None:
            self.details = details
        if error_flag is not None:
            self.error_flag = error_flag
        if history_task_info is not None:
            self.history_task_info = history_task_info
        if timestamp is not None:
            self.timestamp = timestamp

    @property
    def details(self):
        """Gets the details of this DeviceInnerRunSummaryList.  # noqa: E501


        :return: The details of this DeviceInnerRunSummaryList.  # noqa: E501
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this DeviceInnerRunSummaryList.


        :param details: The details of this DeviceInnerRunSummaryList.  # noqa: E501
        :type: str
        """

        self._details = details

    @property
    def error_flag(self):
        """Gets the error_flag of this DeviceInnerRunSummaryList.  # noqa: E501


        :return: The error_flag of this DeviceInnerRunSummaryList.  # noqa: E501
        :rtype: bool
        """
        return self._error_flag

    @error_flag.setter
    def error_flag(self, error_flag):
        """Sets the error_flag of this DeviceInnerRunSummaryList.


        :param error_flag: The error_flag of this DeviceInnerRunSummaryList.  # noqa: E501
        :type: bool
        """

        self._error_flag = error_flag

    @property
    def history_task_info(self):
        """Gets the history_task_info of this DeviceInnerRunSummaryList.  # noqa: E501


        :return: The history_task_info of this DeviceInnerRunSummaryList.  # noqa: E501
        :rtype: DeviceInnerHistoryTaskInfo
        """
        return self._history_task_info

    @history_task_info.setter
    def history_task_info(self, history_task_info):
        """Sets the history_task_info of this DeviceInnerRunSummaryList.


        :param history_task_info: The history_task_info of this DeviceInnerRunSummaryList.  # noqa: E501
        :type: DeviceInnerHistoryTaskInfo
        """

        self._history_task_info = history_task_info

    @property
    def timestamp(self):
        """Gets the timestamp of this DeviceInnerRunSummaryList.  # noqa: E501


        :return: The timestamp of this DeviceInnerRunSummaryList.  # noqa: E501
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this DeviceInnerRunSummaryList.


        :param timestamp: The timestamp of this DeviceInnerRunSummaryList.  # noqa: E501
        :type: int
        """

        self._timestamp = timestamp

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DeviceInnerRunSummaryList):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
