# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'dest_ip': 'str',
        'protocol': 'str',
        'source_port': 'str',
        'control_plane': 'str',
        'dest_port': 'str',
        'source_ip': 'str',
        'vxlan_info': 'PathResponseResultResponseEgressVirtualInterfaceVxlanInfo',
        'data_packet_encapsulation': 'str'
    }

    attribute_map = {
        'dest_ip': 'destIp',
        'protocol': 'protocol',
        'source_port': 'sourcePort',
        'control_plane': 'controlPlane',
        'dest_port': 'destPort',
        'source_ip': 'sourceIp',
        'vxlan_info': 'vxlanInfo',
        'data_packet_encapsulation': 'dataPacketEncapsulation'
    }

    def __init__(self, dest_ip=None, protocol=None, source_port=None, control_plane=None, dest_port=None, source_ip=None, vxlan_info=None, data_packet_encapsulation=None):  # noqa: E501
        """PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo - a model defined in OpenAPI"""  # noqa: E501

        self._dest_ip = None
        self._protocol = None
        self._source_port = None
        self._control_plane = None
        self._dest_port = None
        self._source_ip = None
        self._vxlan_info = None
        self._data_packet_encapsulation = None
        self.discriminator = None

        if dest_ip is not None:
            self.dest_ip = dest_ip
        if protocol is not None:
            self.protocol = protocol
        if source_port is not None:
            self.source_port = source_port
        if control_plane is not None:
            self.control_plane = control_plane
        if dest_port is not None:
            self.dest_port = dest_port
        if source_ip is not None:
            self.source_ip = source_ip
        if vxlan_info is not None:
            self.vxlan_info = vxlan_info
        if data_packet_encapsulation is not None:
            self.data_packet_encapsulation = data_packet_encapsulation

    @property
    def dest_ip(self):
        """Gets the dest_ip of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501


        :return: The dest_ip of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :rtype: str
        """
        return self._dest_ip

    @dest_ip.setter
    def dest_ip(self, dest_ip):
        """Sets the dest_ip of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.


        :param dest_ip: The dest_ip of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :type: str
        """

        self._dest_ip = dest_ip

    @property
    def protocol(self):
        """Gets the protocol of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501


        :return: The protocol of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.


        :param protocol: The protocol of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :type: str
        """

        self._protocol = protocol

    @property
    def source_port(self):
        """Gets the source_port of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501


        :return: The source_port of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :rtype: str
        """
        return self._source_port

    @source_port.setter
    def source_port(self, source_port):
        """Sets the source_port of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.


        :param source_port: The source_port of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :type: str
        """

        self._source_port = source_port

    @property
    def control_plane(self):
        """Gets the control_plane of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501


        :return: The control_plane of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :rtype: str
        """
        return self._control_plane

    @control_plane.setter
    def control_plane(self, control_plane):
        """Sets the control_plane of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.


        :param control_plane: The control_plane of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :type: str
        """

        self._control_plane = control_plane

    @property
    def dest_port(self):
        """Gets the dest_port of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501


        :return: The dest_port of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :rtype: str
        """
        return self._dest_port

    @dest_port.setter
    def dest_port(self, dest_port):
        """Sets the dest_port of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.


        :param dest_port: The dest_port of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :type: str
        """

        self._dest_port = dest_port

    @property
    def source_ip(self):
        """Gets the source_ip of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501


        :return: The source_ip of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :rtype: str
        """
        return self._source_ip

    @source_ip.setter
    def source_ip(self, source_ip):
        """Sets the source_ip of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.


        :param source_ip: The source_ip of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :type: str
        """

        self._source_ip = source_ip

    @property
    def vxlan_info(self):
        """Gets the vxlan_info of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501


        :return: The vxlan_info of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :rtype: PathResponseResultResponseEgressVirtualInterfaceVxlanInfo
        """
        return self._vxlan_info

    @vxlan_info.setter
    def vxlan_info(self, vxlan_info):
        """Sets the vxlan_info of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.


        :param vxlan_info: The vxlan_info of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :type: PathResponseResultResponseEgressVirtualInterfaceVxlanInfo
        """

        self._vxlan_info = vxlan_info

    @property
    def data_packet_encapsulation(self):
        """Gets the data_packet_encapsulation of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501


        :return: The data_packet_encapsulation of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :rtype: str
        """
        return self._data_packet_encapsulation

    @data_packet_encapsulation.setter
    def data_packet_encapsulation(self, data_packet_encapsulation):
        """Sets the data_packet_encapsulation of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.


        :param data_packet_encapsulation: The data_packet_encapsulation of this PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo.  # noqa: E501
        :type: str
        """

        self._data_packet_encapsulation = data_packet_encapsulation

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
