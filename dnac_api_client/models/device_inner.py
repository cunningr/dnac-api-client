# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from dnac_api_client.models.device_inner_device_info import DeviceInnerDeviceInfo  # noqa: F401,E501
from dnac_api_client.models.device_inner_run_summary_list import DeviceInnerRunSummaryList  # noqa: F401,E501
from dnac_api_client.models.device_inner_system_reset_workflow import DeviceInnerSystemResetWorkflow  # noqa: F401,E501
from dnac_api_client.models.device_inner_workflow_parameters import DeviceInnerWorkflowParameters  # noqa: F401,E501


class DeviceInner(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'device_info': 'DeviceInnerDeviceInfo',
        'run_summary_list': 'list[DeviceInnerRunSummaryList]',
        'system_reset_workflow': 'DeviceInnerSystemResetWorkflow',
        'system_workflow': 'DeviceInnerSystemResetWorkflow',
        'tenant_id': 'str',
        'version': 'int',
        'workflow': 'DeviceInnerSystemResetWorkflow',
        'workflow_parameters': 'DeviceInnerWorkflowParameters'
    }

    attribute_map = {
        'id': '_id',
        'device_info': 'deviceInfo',
        'run_summary_list': 'runSummaryList',
        'system_reset_workflow': 'systemResetWorkflow',
        'system_workflow': 'systemWorkflow',
        'tenant_id': 'tenantId',
        'version': 'version',
        'workflow': 'workflow',
        'workflow_parameters': 'workflowParameters'
    }

    def __init__(self, id=None, device_info=None, run_summary_list=None, system_reset_workflow=None, system_workflow=None, tenant_id=None, version=None, workflow=None, workflow_parameters=None):  # noqa: E501
        """DeviceInner - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._device_info = None
        self._run_summary_list = None
        self._system_reset_workflow = None
        self._system_workflow = None
        self._tenant_id = None
        self._version = None
        self._workflow = None
        self._workflow_parameters = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if device_info is not None:
            self.device_info = device_info
        if run_summary_list is not None:
            self.run_summary_list = run_summary_list
        if system_reset_workflow is not None:
            self.system_reset_workflow = system_reset_workflow
        if system_workflow is not None:
            self.system_workflow = system_workflow
        if tenant_id is not None:
            self.tenant_id = tenant_id
        if version is not None:
            self.version = version
        if workflow is not None:
            self.workflow = workflow
        if workflow_parameters is not None:
            self.workflow_parameters = workflow_parameters

    @property
    def id(self):
        """Gets the id of this DeviceInner.  # noqa: E501


        :return: The id of this DeviceInner.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeviceInner.


        :param id: The id of this DeviceInner.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def device_info(self):
        """Gets the device_info of this DeviceInner.  # noqa: E501


        :return: The device_info of this DeviceInner.  # noqa: E501
        :rtype: DeviceInnerDeviceInfo
        """
        return self._device_info

    @device_info.setter
    def device_info(self, device_info):
        """Sets the device_info of this DeviceInner.


        :param device_info: The device_info of this DeviceInner.  # noqa: E501
        :type: DeviceInnerDeviceInfo
        """

        self._device_info = device_info

    @property
    def run_summary_list(self):
        """Gets the run_summary_list of this DeviceInner.  # noqa: E501


        :return: The run_summary_list of this DeviceInner.  # noqa: E501
        :rtype: list[DeviceInnerRunSummaryList]
        """
        return self._run_summary_list

    @run_summary_list.setter
    def run_summary_list(self, run_summary_list):
        """Sets the run_summary_list of this DeviceInner.


        :param run_summary_list: The run_summary_list of this DeviceInner.  # noqa: E501
        :type: list[DeviceInnerRunSummaryList]
        """

        self._run_summary_list = run_summary_list

    @property
    def system_reset_workflow(self):
        """Gets the system_reset_workflow of this DeviceInner.  # noqa: E501


        :return: The system_reset_workflow of this DeviceInner.  # noqa: E501
        :rtype: DeviceInnerSystemResetWorkflow
        """
        return self._system_reset_workflow

    @system_reset_workflow.setter
    def system_reset_workflow(self, system_reset_workflow):
        """Sets the system_reset_workflow of this DeviceInner.


        :param system_reset_workflow: The system_reset_workflow of this DeviceInner.  # noqa: E501
        :type: DeviceInnerSystemResetWorkflow
        """

        self._system_reset_workflow = system_reset_workflow

    @property
    def system_workflow(self):
        """Gets the system_workflow of this DeviceInner.  # noqa: E501


        :return: The system_workflow of this DeviceInner.  # noqa: E501
        :rtype: DeviceInnerSystemResetWorkflow
        """
        return self._system_workflow

    @system_workflow.setter
    def system_workflow(self, system_workflow):
        """Sets the system_workflow of this DeviceInner.


        :param system_workflow: The system_workflow of this DeviceInner.  # noqa: E501
        :type: DeviceInnerSystemResetWorkflow
        """

        self._system_workflow = system_workflow

    @property
    def tenant_id(self):
        """Gets the tenant_id of this DeviceInner.  # noqa: E501


        :return: The tenant_id of this DeviceInner.  # noqa: E501
        :rtype: str
        """
        return self._tenant_id

    @tenant_id.setter
    def tenant_id(self, tenant_id):
        """Sets the tenant_id of this DeviceInner.


        :param tenant_id: The tenant_id of this DeviceInner.  # noqa: E501
        :type: str
        """

        self._tenant_id = tenant_id

    @property
    def version(self):
        """Gets the version of this DeviceInner.  # noqa: E501


        :return: The version of this DeviceInner.  # noqa: E501
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DeviceInner.


        :param version: The version of this DeviceInner.  # noqa: E501
        :type: int
        """

        self._version = version

    @property
    def workflow(self):
        """Gets the workflow of this DeviceInner.  # noqa: E501


        :return: The workflow of this DeviceInner.  # noqa: E501
        :rtype: DeviceInnerSystemResetWorkflow
        """
        return self._workflow

    @workflow.setter
    def workflow(self, workflow):
        """Sets the workflow of this DeviceInner.


        :param workflow: The workflow of this DeviceInner.  # noqa: E501
        :type: DeviceInnerSystemResetWorkflow
        """

        self._workflow = workflow

    @property
    def workflow_parameters(self):
        """Gets the workflow_parameters of this DeviceInner.  # noqa: E501


        :return: The workflow_parameters of this DeviceInner.  # noqa: E501
        :rtype: DeviceInnerWorkflowParameters
        """
        return self._workflow_parameters

    @workflow_parameters.setter
    def workflow_parameters(self, workflow_parameters):
        """Sets the workflow_parameters of this DeviceInner.


        :param workflow_parameters: The workflow_parameters of this DeviceInner.  # noqa: E501
        :type: DeviceInnerWorkflowParameters
        """

        self._workflow_parameters = workflow_parameters

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DeviceInner):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
