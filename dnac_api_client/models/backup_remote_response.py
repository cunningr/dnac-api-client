# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class BackupRemoteResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'remote_server_ip': 'str',
        'remote_server_username': 'str',
        'remote_server_dir': 'str',
        'remote_server_passphrase': 'str',
        'remote_server_password': 'str',
        'remote_server_port': 'str'
    }

    attribute_map = {
        'remote_server_ip': 'remote_server_ip',
        'remote_server_username': 'remote_server_username',
        'remote_server_dir': 'remote_server_dir',
        'remote_server_passphrase': 'remote_server_passphrase',
        'remote_server_password': 'remote_server_password',
        'remote_server_port': 'remote_server_port'
    }

    def __init__(self, remote_server_ip=None, remote_server_username=None, remote_server_dir=None, remote_server_passphrase=None, remote_server_password=None, remote_server_port=None):  # noqa: E501
        """BackupRemoteResponse - a model defined in OpenAPI"""  # noqa: E501

        self._remote_server_ip = None
        self._remote_server_username = None
        self._remote_server_dir = None
        self._remote_server_passphrase = None
        self._remote_server_password = None
        self._remote_server_port = None
        self.discriminator = None

        if remote_server_ip is not None:
            self.remote_server_ip = remote_server_ip
        if remote_server_username is not None:
            self.remote_server_username = remote_server_username
        if remote_server_dir is not None:
            self.remote_server_dir = remote_server_dir
        if remote_server_passphrase is not None:
            self.remote_server_passphrase = remote_server_passphrase
        if remote_server_password is not None:
            self.remote_server_password = remote_server_password
        if remote_server_port is not None:
            self.remote_server_port = remote_server_port

    @property
    def remote_server_ip(self):
        """Gets the remote_server_ip of this BackupRemoteResponse.  # noqa: E501


        :return: The remote_server_ip of this BackupRemoteResponse.  # noqa: E501
        :rtype: str
        """
        return self._remote_server_ip

    @remote_server_ip.setter
    def remote_server_ip(self, remote_server_ip):
        """Sets the remote_server_ip of this BackupRemoteResponse.


        :param remote_server_ip: The remote_server_ip of this BackupRemoteResponse.  # noqa: E501
        :type: str
        """

        self._remote_server_ip = remote_server_ip

    @property
    def remote_server_username(self):
        """Gets the remote_server_username of this BackupRemoteResponse.  # noqa: E501


        :return: The remote_server_username of this BackupRemoteResponse.  # noqa: E501
        :rtype: str
        """
        return self._remote_server_username

    @remote_server_username.setter
    def remote_server_username(self, remote_server_username):
        """Sets the remote_server_username of this BackupRemoteResponse.


        :param remote_server_username: The remote_server_username of this BackupRemoteResponse.  # noqa: E501
        :type: str
        """

        self._remote_server_username = remote_server_username

    @property
    def remote_server_dir(self):
        """Gets the remote_server_dir of this BackupRemoteResponse.  # noqa: E501


        :return: The remote_server_dir of this BackupRemoteResponse.  # noqa: E501
        :rtype: str
        """
        return self._remote_server_dir

    @remote_server_dir.setter
    def remote_server_dir(self, remote_server_dir):
        """Sets the remote_server_dir of this BackupRemoteResponse.


        :param remote_server_dir: The remote_server_dir of this BackupRemoteResponse.  # noqa: E501
        :type: str
        """

        self._remote_server_dir = remote_server_dir

    @property
    def remote_server_passphrase(self):
        """Gets the remote_server_passphrase of this BackupRemoteResponse.  # noqa: E501


        :return: The remote_server_passphrase of this BackupRemoteResponse.  # noqa: E501
        :rtype: str
        """
        return self._remote_server_passphrase

    @remote_server_passphrase.setter
    def remote_server_passphrase(self, remote_server_passphrase):
        """Sets the remote_server_passphrase of this BackupRemoteResponse.


        :param remote_server_passphrase: The remote_server_passphrase of this BackupRemoteResponse.  # noqa: E501
        :type: str
        """

        self._remote_server_passphrase = remote_server_passphrase

    @property
    def remote_server_password(self):
        """Gets the remote_server_password of this BackupRemoteResponse.  # noqa: E501


        :return: The remote_server_password of this BackupRemoteResponse.  # noqa: E501
        :rtype: str
        """
        return self._remote_server_password

    @remote_server_password.setter
    def remote_server_password(self, remote_server_password):
        """Sets the remote_server_password of this BackupRemoteResponse.


        :param remote_server_password: The remote_server_password of this BackupRemoteResponse.  # noqa: E501
        :type: str
        """

        self._remote_server_password = remote_server_password

    @property
    def remote_server_port(self):
        """Gets the remote_server_port of this BackupRemoteResponse.  # noqa: E501


        :return: The remote_server_port of this BackupRemoteResponse.  # noqa: E501
        :rtype: str
        """
        return self._remote_server_port

    @remote_server_port.setter
    def remote_server_port(self, remote_server_port):
        """Sets the remote_server_port of this BackupRemoteResponse.


        :param remote_server_port: The remote_server_port of this BackupRemoteResponse.  # noqa: E501
        :type: str
        """

        self._remote_server_port = remote_server_port

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BackupRemoteResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
