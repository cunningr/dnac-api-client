# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class TaskDTOListResponseResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'operation_id_list': 'object',
        'service_type': 'str',
        'error_key': 'str',
        'data': 'str',
        'additional_status_url': 'str',
        'root_id': 'str',
        'error_code': 'str',
        'version': 'int',
        'parent_id': 'str',
        'is_error': 'bool',
        'instance_tenant_id': 'str',
        'failure_reason': 'str',
        'last_update': 'str',
        'progress': 'str',
        'start_time': 'str',
        'end_time': 'str',
        'id': 'str',
        'username': 'str'
    }

    attribute_map = {
        'operation_id_list': 'operationIdList',
        'service_type': 'serviceType',
        'error_key': 'errorKey',
        'data': 'data',
        'additional_status_url': 'additionalStatusURL',
        'root_id': 'rootId',
        'error_code': 'errorCode',
        'version': 'version',
        'parent_id': 'parentId',
        'is_error': 'isError',
        'instance_tenant_id': 'instanceTenantId',
        'failure_reason': 'failureReason',
        'last_update': 'lastUpdate',
        'progress': 'progress',
        'start_time': 'startTime',
        'end_time': 'endTime',
        'id': 'id',
        'username': 'username'
    }

    def __init__(self, operation_id_list=None, service_type=None, error_key=None, data=None, additional_status_url=None, root_id=None, error_code=None, version=None, parent_id=None, is_error=None, instance_tenant_id=None, failure_reason=None, last_update=None, progress=None, start_time=None, end_time=None, id=None, username=None):  # noqa: E501
        """TaskDTOListResponseResponse - a model defined in OpenAPI"""  # noqa: E501

        self._operation_id_list = None
        self._service_type = None
        self._error_key = None
        self._data = None
        self._additional_status_url = None
        self._root_id = None
        self._error_code = None
        self._version = None
        self._parent_id = None
        self._is_error = None
        self._instance_tenant_id = None
        self._failure_reason = None
        self._last_update = None
        self._progress = None
        self._start_time = None
        self._end_time = None
        self._id = None
        self._username = None
        self.discriminator = None

        if operation_id_list is not None:
            self.operation_id_list = operation_id_list
        if service_type is not None:
            self.service_type = service_type
        if error_key is not None:
            self.error_key = error_key
        if data is not None:
            self.data = data
        if additional_status_url is not None:
            self.additional_status_url = additional_status_url
        if root_id is not None:
            self.root_id = root_id
        if error_code is not None:
            self.error_code = error_code
        if version is not None:
            self.version = version
        if parent_id is not None:
            self.parent_id = parent_id
        if is_error is not None:
            self.is_error = is_error
        if instance_tenant_id is not None:
            self.instance_tenant_id = instance_tenant_id
        if failure_reason is not None:
            self.failure_reason = failure_reason
        if last_update is not None:
            self.last_update = last_update
        if progress is not None:
            self.progress = progress
        if start_time is not None:
            self.start_time = start_time
        if end_time is not None:
            self.end_time = end_time
        if id is not None:
            self.id = id
        if username is not None:
            self.username = username

    @property
    def operation_id_list(self):
        """Gets the operation_id_list of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The operation_id_list of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: object
        """
        return self._operation_id_list

    @operation_id_list.setter
    def operation_id_list(self, operation_id_list):
        """Sets the operation_id_list of this TaskDTOListResponseResponse.


        :param operation_id_list: The operation_id_list of this TaskDTOListResponseResponse.  # noqa: E501
        :type: object
        """

        self._operation_id_list = operation_id_list

    @property
    def service_type(self):
        """Gets the service_type of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The service_type of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._service_type

    @service_type.setter
    def service_type(self, service_type):
        """Sets the service_type of this TaskDTOListResponseResponse.


        :param service_type: The service_type of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._service_type = service_type

    @property
    def error_key(self):
        """Gets the error_key of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The error_key of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._error_key

    @error_key.setter
    def error_key(self, error_key):
        """Sets the error_key of this TaskDTOListResponseResponse.


        :param error_key: The error_key of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._error_key = error_key

    @property
    def data(self):
        """Gets the data of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The data of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this TaskDTOListResponseResponse.


        :param data: The data of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._data = data

    @property
    def additional_status_url(self):
        """Gets the additional_status_url of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The additional_status_url of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._additional_status_url

    @additional_status_url.setter
    def additional_status_url(self, additional_status_url):
        """Sets the additional_status_url of this TaskDTOListResponseResponse.


        :param additional_status_url: The additional_status_url of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._additional_status_url = additional_status_url

    @property
    def root_id(self):
        """Gets the root_id of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The root_id of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._root_id

    @root_id.setter
    def root_id(self, root_id):
        """Sets the root_id of this TaskDTOListResponseResponse.


        :param root_id: The root_id of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._root_id = root_id

    @property
    def error_code(self):
        """Gets the error_code of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The error_code of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this TaskDTOListResponseResponse.


        :param error_code: The error_code of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._error_code = error_code

    @property
    def version(self):
        """Gets the version of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The version of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this TaskDTOListResponseResponse.


        :param version: The version of this TaskDTOListResponseResponse.  # noqa: E501
        :type: int
        """

        self._version = version

    @property
    def parent_id(self):
        """Gets the parent_id of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The parent_id of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this TaskDTOListResponseResponse.


        :param parent_id: The parent_id of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._parent_id = parent_id

    @property
    def is_error(self):
        """Gets the is_error of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The is_error of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_error

    @is_error.setter
    def is_error(self, is_error):
        """Sets the is_error of this TaskDTOListResponseResponse.


        :param is_error: The is_error of this TaskDTOListResponseResponse.  # noqa: E501
        :type: bool
        """

        self._is_error = is_error

    @property
    def instance_tenant_id(self):
        """Gets the instance_tenant_id of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The instance_tenant_id of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._instance_tenant_id

    @instance_tenant_id.setter
    def instance_tenant_id(self, instance_tenant_id):
        """Sets the instance_tenant_id of this TaskDTOListResponseResponse.


        :param instance_tenant_id: The instance_tenant_id of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._instance_tenant_id = instance_tenant_id

    @property
    def failure_reason(self):
        """Gets the failure_reason of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The failure_reason of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this TaskDTOListResponseResponse.


        :param failure_reason: The failure_reason of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._failure_reason = failure_reason

    @property
    def last_update(self):
        """Gets the last_update of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The last_update of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._last_update

    @last_update.setter
    def last_update(self, last_update):
        """Sets the last_update of this TaskDTOListResponseResponse.


        :param last_update: The last_update of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._last_update = last_update

    @property
    def progress(self):
        """Gets the progress of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The progress of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this TaskDTOListResponseResponse.


        :param progress: The progress of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._progress = progress

    @property
    def start_time(self):
        """Gets the start_time of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The start_time of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this TaskDTOListResponseResponse.


        :param start_time: The start_time of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The end_time of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this TaskDTOListResponseResponse.


        :param end_time: The end_time of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._end_time = end_time

    @property
    def id(self):
        """Gets the id of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The id of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TaskDTOListResponseResponse.


        :param id: The id of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def username(self):
        """Gets the username of this TaskDTOListResponseResponse.  # noqa: E501


        :return: The username of this TaskDTOListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this TaskDTOListResponseResponse.


        :param username: The username of this TaskDTOListResponseResponse.  # noqa: E501
        :type: str
        """

        self._username = username

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TaskDTOListResponseResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
