# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class FlowAnalysisListOutputResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'control_path': 'bool',
        'create_time': 'int',
        'dest_ip': 'str',
        'dest_port': 'str',
        'failure_reason': 'str',
        'id': 'str',
        'inclusions': 'list[str]',
        'last_update_time': 'int',
        'periodic_refresh': 'bool',
        'protocol': 'str',
        'source_ip': 'str',
        'source_port': 'str',
        'status': 'str'
    }

    attribute_map = {
        'control_path': 'controlPath',
        'create_time': 'createTime',
        'dest_ip': 'destIP',
        'dest_port': 'destPort',
        'failure_reason': 'failureReason',
        'id': 'id',
        'inclusions': 'inclusions',
        'last_update_time': 'lastUpdateTime',
        'periodic_refresh': 'periodicRefresh',
        'protocol': 'protocol',
        'source_ip': 'sourceIP',
        'source_port': 'sourcePort',
        'status': 'status'
    }

    def __init__(self, control_path=None, create_time=None, dest_ip=None, dest_port=None, failure_reason=None, id=None, inclusions=None, last_update_time=None, periodic_refresh=None, protocol=None, source_ip=None, source_port=None, status=None):  # noqa: E501
        """FlowAnalysisListOutputResponse - a model defined in Swagger"""  # noqa: E501

        self._control_path = None
        self._create_time = None
        self._dest_ip = None
        self._dest_port = None
        self._failure_reason = None
        self._id = None
        self._inclusions = None
        self._last_update_time = None
        self._periodic_refresh = None
        self._protocol = None
        self._source_ip = None
        self._source_port = None
        self._status = None
        self.discriminator = None

        if control_path is not None:
            self.control_path = control_path
        if create_time is not None:
            self.create_time = create_time
        if dest_ip is not None:
            self.dest_ip = dest_ip
        if dest_port is not None:
            self.dest_port = dest_port
        if failure_reason is not None:
            self.failure_reason = failure_reason
        if id is not None:
            self.id = id
        if inclusions is not None:
            self.inclusions = inclusions
        if last_update_time is not None:
            self.last_update_time = last_update_time
        if periodic_refresh is not None:
            self.periodic_refresh = periodic_refresh
        if protocol is not None:
            self.protocol = protocol
        if source_ip is not None:
            self.source_ip = source_ip
        if source_port is not None:
            self.source_port = source_port
        if status is not None:
            self.status = status

    @property
    def control_path(self):
        """Gets the control_path of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The control_path of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: bool
        """
        return self._control_path

    @control_path.setter
    def control_path(self, control_path):
        """Sets the control_path of this FlowAnalysisListOutputResponse.


        :param control_path: The control_path of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: bool
        """

        self._control_path = control_path

    @property
    def create_time(self):
        """Gets the create_time of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The create_time of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: int
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this FlowAnalysisListOutputResponse.


        :param create_time: The create_time of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: int
        """

        self._create_time = create_time

    @property
    def dest_ip(self):
        """Gets the dest_ip of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The dest_ip of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: str
        """
        return self._dest_ip

    @dest_ip.setter
    def dest_ip(self, dest_ip):
        """Sets the dest_ip of this FlowAnalysisListOutputResponse.


        :param dest_ip: The dest_ip of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: str
        """

        self._dest_ip = dest_ip

    @property
    def dest_port(self):
        """Gets the dest_port of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The dest_port of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: str
        """
        return self._dest_port

    @dest_port.setter
    def dest_port(self, dest_port):
        """Sets the dest_port of this FlowAnalysisListOutputResponse.


        :param dest_port: The dest_port of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: str
        """

        self._dest_port = dest_port

    @property
    def failure_reason(self):
        """Gets the failure_reason of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The failure_reason of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this FlowAnalysisListOutputResponse.


        :param failure_reason: The failure_reason of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: str
        """

        self._failure_reason = failure_reason

    @property
    def id(self):
        """Gets the id of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The id of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FlowAnalysisListOutputResponse.


        :param id: The id of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def inclusions(self):
        """Gets the inclusions of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The inclusions of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._inclusions

    @inclusions.setter
    def inclusions(self, inclusions):
        """Sets the inclusions of this FlowAnalysisListOutputResponse.


        :param inclusions: The inclusions of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: list[str]
        """

        self._inclusions = inclusions

    @property
    def last_update_time(self):
        """Gets the last_update_time of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The last_update_time of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: int
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time):
        """Sets the last_update_time of this FlowAnalysisListOutputResponse.


        :param last_update_time: The last_update_time of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: int
        """

        self._last_update_time = last_update_time

    @property
    def periodic_refresh(self):
        """Gets the periodic_refresh of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The periodic_refresh of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: bool
        """
        return self._periodic_refresh

    @periodic_refresh.setter
    def periodic_refresh(self, periodic_refresh):
        """Sets the periodic_refresh of this FlowAnalysisListOutputResponse.


        :param periodic_refresh: The periodic_refresh of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: bool
        """

        self._periodic_refresh = periodic_refresh

    @property
    def protocol(self):
        """Gets the protocol of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The protocol of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this FlowAnalysisListOutputResponse.


        :param protocol: The protocol of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: str
        """

        self._protocol = protocol

    @property
    def source_ip(self):
        """Gets the source_ip of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The source_ip of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: str
        """
        return self._source_ip

    @source_ip.setter
    def source_ip(self, source_ip):
        """Sets the source_ip of this FlowAnalysisListOutputResponse.


        :param source_ip: The source_ip of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: str
        """

        self._source_ip = source_ip

    @property
    def source_port(self):
        """Gets the source_port of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The source_port of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: str
        """
        return self._source_port

    @source_port.setter
    def source_port(self, source_port):
        """Sets the source_port of this FlowAnalysisListOutputResponse.


        :param source_port: The source_port of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: str
        """

        self._source_port = source_port

    @property
    def status(self):
        """Gets the status of this FlowAnalysisListOutputResponse.  # noqa: E501


        :return: The status of this FlowAnalysisListOutputResponse.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this FlowAnalysisListOutputResponse.


        :param status: The status of this FlowAnalysisListOutputResponse.  # noqa: E501
        :type: str
        """

        self._status = status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FlowAnalysisListOutputResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
