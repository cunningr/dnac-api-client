# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from dnac_api_client.models.image_info_list_response_applicable_devices_for_image import ImageInfoListResponseApplicableDevicesForImage  # noqa: F401,E501
from dnac_api_client.models.image_info_list_response_profile_info import ImageInfoListResponseProfileInfo  # noqa: F401,E501


class ImageInfoListResponseResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'applicable_devices_for_image': 'list[ImageInfoListResponseApplicableDevicesForImage]',
        'application_type': 'str',
        'created_time': 'str',
        'extended_attributes': 'object',
        'family': 'str',
        'feature': 'str',
        'file_service_id': 'str',
        'file_size': 'str',
        'image_integrity_status': 'str',
        'image_name': 'str',
        'image_series': 'list[str]',
        'image_source': 'str',
        'image_type': 'str',
        'image_uuid': 'str',
        'import_source_type': 'str',
        'is_tagged_golden': 'bool',
        'md5_checksum': 'str',
        'name': 'str',
        'profile_info': 'list[ImageInfoListResponseProfileInfo]',
        'sha_check_sum': 'str',
        'vendor': 'str',
        'version': 'str'
    }

    attribute_map = {
        'applicable_devices_for_image': 'applicableDevicesForImage',
        'application_type': 'applicationType',
        'created_time': 'createdTime',
        'extended_attributes': 'extendedAttributes',
        'family': 'family',
        'feature': 'feature',
        'file_service_id': 'fileServiceId',
        'file_size': 'fileSize',
        'image_integrity_status': 'imageIntegrityStatus',
        'image_name': 'imageName',
        'image_series': 'imageSeries',
        'image_source': 'imageSource',
        'image_type': 'imageType',
        'image_uuid': 'imageUuid',
        'import_source_type': 'importSourceType',
        'is_tagged_golden': 'isTaggedGolden',
        'md5_checksum': 'md5Checksum',
        'name': 'name',
        'profile_info': 'profileInfo',
        'sha_check_sum': 'shaCheckSum',
        'vendor': 'vendor',
        'version': 'version'
    }

    def __init__(self, applicable_devices_for_image=None, application_type=None, created_time=None, extended_attributes=None, family=None, feature=None, file_service_id=None, file_size=None, image_integrity_status=None, image_name=None, image_series=None, image_source=None, image_type=None, image_uuid=None, import_source_type=None, is_tagged_golden=None, md5_checksum=None, name=None, profile_info=None, sha_check_sum=None, vendor=None, version=None):  # noqa: E501
        """ImageInfoListResponseResponse - a model defined in Swagger"""  # noqa: E501

        self._applicable_devices_for_image = None
        self._application_type = None
        self._created_time = None
        self._extended_attributes = None
        self._family = None
        self._feature = None
        self._file_service_id = None
        self._file_size = None
        self._image_integrity_status = None
        self._image_name = None
        self._image_series = None
        self._image_source = None
        self._image_type = None
        self._image_uuid = None
        self._import_source_type = None
        self._is_tagged_golden = None
        self._md5_checksum = None
        self._name = None
        self._profile_info = None
        self._sha_check_sum = None
        self._vendor = None
        self._version = None
        self.discriminator = None

        if applicable_devices_for_image is not None:
            self.applicable_devices_for_image = applicable_devices_for_image
        if application_type is not None:
            self.application_type = application_type
        if created_time is not None:
            self.created_time = created_time
        if extended_attributes is not None:
            self.extended_attributes = extended_attributes
        if family is not None:
            self.family = family
        if feature is not None:
            self.feature = feature
        if file_service_id is not None:
            self.file_service_id = file_service_id
        if file_size is not None:
            self.file_size = file_size
        if image_integrity_status is not None:
            self.image_integrity_status = image_integrity_status
        if image_name is not None:
            self.image_name = image_name
        if image_series is not None:
            self.image_series = image_series
        if image_source is not None:
            self.image_source = image_source
        if image_type is not None:
            self.image_type = image_type
        if image_uuid is not None:
            self.image_uuid = image_uuid
        if import_source_type is not None:
            self.import_source_type = import_source_type
        if is_tagged_golden is not None:
            self.is_tagged_golden = is_tagged_golden
        if md5_checksum is not None:
            self.md5_checksum = md5_checksum
        if name is not None:
            self.name = name
        if profile_info is not None:
            self.profile_info = profile_info
        if sha_check_sum is not None:
            self.sha_check_sum = sha_check_sum
        if vendor is not None:
            self.vendor = vendor
        if version is not None:
            self.version = version

    @property
    def applicable_devices_for_image(self):
        """Gets the applicable_devices_for_image of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The applicable_devices_for_image of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: list[ImageInfoListResponseApplicableDevicesForImage]
        """
        return self._applicable_devices_for_image

    @applicable_devices_for_image.setter
    def applicable_devices_for_image(self, applicable_devices_for_image):
        """Sets the applicable_devices_for_image of this ImageInfoListResponseResponse.


        :param applicable_devices_for_image: The applicable_devices_for_image of this ImageInfoListResponseResponse.  # noqa: E501
        :type: list[ImageInfoListResponseApplicableDevicesForImage]
        """

        self._applicable_devices_for_image = applicable_devices_for_image

    @property
    def application_type(self):
        """Gets the application_type of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The application_type of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._application_type

    @application_type.setter
    def application_type(self, application_type):
        """Sets the application_type of this ImageInfoListResponseResponse.


        :param application_type: The application_type of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._application_type = application_type

    @property
    def created_time(self):
        """Gets the created_time of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The created_time of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._created_time

    @created_time.setter
    def created_time(self, created_time):
        """Sets the created_time of this ImageInfoListResponseResponse.


        :param created_time: The created_time of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._created_time = created_time

    @property
    def extended_attributes(self):
        """Gets the extended_attributes of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The extended_attributes of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: object
        """
        return self._extended_attributes

    @extended_attributes.setter
    def extended_attributes(self, extended_attributes):
        """Sets the extended_attributes of this ImageInfoListResponseResponse.


        :param extended_attributes: The extended_attributes of this ImageInfoListResponseResponse.  # noqa: E501
        :type: object
        """

        self._extended_attributes = extended_attributes

    @property
    def family(self):
        """Gets the family of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The family of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._family

    @family.setter
    def family(self, family):
        """Sets the family of this ImageInfoListResponseResponse.


        :param family: The family of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._family = family

    @property
    def feature(self):
        """Gets the feature of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The feature of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._feature

    @feature.setter
    def feature(self, feature):
        """Sets the feature of this ImageInfoListResponseResponse.


        :param feature: The feature of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._feature = feature

    @property
    def file_service_id(self):
        """Gets the file_service_id of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The file_service_id of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._file_service_id

    @file_service_id.setter
    def file_service_id(self, file_service_id):
        """Sets the file_service_id of this ImageInfoListResponseResponse.


        :param file_service_id: The file_service_id of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._file_service_id = file_service_id

    @property
    def file_size(self):
        """Gets the file_size of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The file_size of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._file_size

    @file_size.setter
    def file_size(self, file_size):
        """Sets the file_size of this ImageInfoListResponseResponse.


        :param file_size: The file_size of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._file_size = file_size

    @property
    def image_integrity_status(self):
        """Gets the image_integrity_status of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The image_integrity_status of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._image_integrity_status

    @image_integrity_status.setter
    def image_integrity_status(self, image_integrity_status):
        """Sets the image_integrity_status of this ImageInfoListResponseResponse.


        :param image_integrity_status: The image_integrity_status of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._image_integrity_status = image_integrity_status

    @property
    def image_name(self):
        """Gets the image_name of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The image_name of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._image_name

    @image_name.setter
    def image_name(self, image_name):
        """Sets the image_name of this ImageInfoListResponseResponse.


        :param image_name: The image_name of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._image_name = image_name

    @property
    def image_series(self):
        """Gets the image_series of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The image_series of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._image_series

    @image_series.setter
    def image_series(self, image_series):
        """Sets the image_series of this ImageInfoListResponseResponse.


        :param image_series: The image_series of this ImageInfoListResponseResponse.  # noqa: E501
        :type: list[str]
        """

        self._image_series = image_series

    @property
    def image_source(self):
        """Gets the image_source of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The image_source of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._image_source

    @image_source.setter
    def image_source(self, image_source):
        """Sets the image_source of this ImageInfoListResponseResponse.


        :param image_source: The image_source of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._image_source = image_source

    @property
    def image_type(self):
        """Gets the image_type of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The image_type of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._image_type

    @image_type.setter
    def image_type(self, image_type):
        """Sets the image_type of this ImageInfoListResponseResponse.


        :param image_type: The image_type of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._image_type = image_type

    @property
    def image_uuid(self):
        """Gets the image_uuid of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The image_uuid of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._image_uuid

    @image_uuid.setter
    def image_uuid(self, image_uuid):
        """Sets the image_uuid of this ImageInfoListResponseResponse.


        :param image_uuid: The image_uuid of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._image_uuid = image_uuid

    @property
    def import_source_type(self):
        """Gets the import_source_type of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The import_source_type of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._import_source_type

    @import_source_type.setter
    def import_source_type(self, import_source_type):
        """Sets the import_source_type of this ImageInfoListResponseResponse.


        :param import_source_type: The import_source_type of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["DEVICE", "REMOTEURL", "CCO", "FILESYSTEM"]  # noqa: E501
        if import_source_type not in allowed_values:
            raise ValueError(
                "Invalid value for `import_source_type` ({0}), must be one of {1}"  # noqa: E501
                .format(import_source_type, allowed_values)
            )

        self._import_source_type = import_source_type

    @property
    def is_tagged_golden(self):
        """Gets the is_tagged_golden of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The is_tagged_golden of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_tagged_golden

    @is_tagged_golden.setter
    def is_tagged_golden(self, is_tagged_golden):
        """Sets the is_tagged_golden of this ImageInfoListResponseResponse.


        :param is_tagged_golden: The is_tagged_golden of this ImageInfoListResponseResponse.  # noqa: E501
        :type: bool
        """

        self._is_tagged_golden = is_tagged_golden

    @property
    def md5_checksum(self):
        """Gets the md5_checksum of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The md5_checksum of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._md5_checksum

    @md5_checksum.setter
    def md5_checksum(self, md5_checksum):
        """Sets the md5_checksum of this ImageInfoListResponseResponse.


        :param md5_checksum: The md5_checksum of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._md5_checksum = md5_checksum

    @property
    def name(self):
        """Gets the name of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The name of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ImageInfoListResponseResponse.


        :param name: The name of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def profile_info(self):
        """Gets the profile_info of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The profile_info of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: list[ImageInfoListResponseProfileInfo]
        """
        return self._profile_info

    @profile_info.setter
    def profile_info(self, profile_info):
        """Sets the profile_info of this ImageInfoListResponseResponse.


        :param profile_info: The profile_info of this ImageInfoListResponseResponse.  # noqa: E501
        :type: list[ImageInfoListResponseProfileInfo]
        """

        self._profile_info = profile_info

    @property
    def sha_check_sum(self):
        """Gets the sha_check_sum of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The sha_check_sum of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._sha_check_sum

    @sha_check_sum.setter
    def sha_check_sum(self, sha_check_sum):
        """Sets the sha_check_sum of this ImageInfoListResponseResponse.


        :param sha_check_sum: The sha_check_sum of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._sha_check_sum = sha_check_sum

    @property
    def vendor(self):
        """Gets the vendor of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The vendor of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this ImageInfoListResponseResponse.


        :param vendor: The vendor of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._vendor = vendor

    @property
    def version(self):
        """Gets the version of this ImageInfoListResponseResponse.  # noqa: E501


        :return: The version of this ImageInfoListResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ImageInfoListResponseResponse.


        :param version: The version of this ImageInfoListResponseResponse.  # noqa: E501
        :type: str
        """

        self._version = version

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ImageInfoListResponseResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
