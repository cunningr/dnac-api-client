# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class TopologyResultResponseLinks(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'end_port_name': 'str',
        'start_port_id': 'str',
        'end_port_speed': 'str',
        'start_port_ipv4_mask': 'str',
        'source': 'str',
        'target': 'str',
        'link_status': 'str',
        'end_port_ipv4_mask': 'str',
        'end_port_id': 'str',
        'start_port_name': 'str',
        'start_port_speed': 'str',
        'additional_info': 'object',
        'end_port_ipv4_address': 'str',
        'id': 'str',
        'tag': 'str',
        'start_port_ipv4_address': 'str',
        'grey_out': 'bool'
    }

    attribute_map = {
        'end_port_name': 'endPortName',
        'start_port_id': 'startPortID',
        'end_port_speed': 'endPortSpeed',
        'start_port_ipv4_mask': 'startPortIpv4Mask',
        'source': 'source',
        'target': 'target',
        'link_status': 'linkStatus',
        'end_port_ipv4_mask': 'endPortIpv4Mask',
        'end_port_id': 'endPortID',
        'start_port_name': 'startPortName',
        'start_port_speed': 'startPortSpeed',
        'additional_info': 'additionalInfo',
        'end_port_ipv4_address': 'endPortIpv4Address',
        'id': 'id',
        'tag': 'tag',
        'start_port_ipv4_address': 'startPortIpv4Address',
        'grey_out': 'greyOut'
    }

    def __init__(self, end_port_name=None, start_port_id=None, end_port_speed=None, start_port_ipv4_mask=None, source=None, target=None, link_status=None, end_port_ipv4_mask=None, end_port_id=None, start_port_name=None, start_port_speed=None, additional_info=None, end_port_ipv4_address=None, id=None, tag=None, start_port_ipv4_address=None, grey_out=None):  # noqa: E501
        """TopologyResultResponseLinks - a model defined in OpenAPI"""  # noqa: E501

        self._end_port_name = None
        self._start_port_id = None
        self._end_port_speed = None
        self._start_port_ipv4_mask = None
        self._source = None
        self._target = None
        self._link_status = None
        self._end_port_ipv4_mask = None
        self._end_port_id = None
        self._start_port_name = None
        self._start_port_speed = None
        self._additional_info = None
        self._end_port_ipv4_address = None
        self._id = None
        self._tag = None
        self._start_port_ipv4_address = None
        self._grey_out = None
        self.discriminator = None

        if end_port_name is not None:
            self.end_port_name = end_port_name
        if start_port_id is not None:
            self.start_port_id = start_port_id
        if end_port_speed is not None:
            self.end_port_speed = end_port_speed
        if start_port_ipv4_mask is not None:
            self.start_port_ipv4_mask = start_port_ipv4_mask
        if source is not None:
            self.source = source
        if target is not None:
            self.target = target
        if link_status is not None:
            self.link_status = link_status
        if end_port_ipv4_mask is not None:
            self.end_port_ipv4_mask = end_port_ipv4_mask
        if end_port_id is not None:
            self.end_port_id = end_port_id
        if start_port_name is not None:
            self.start_port_name = start_port_name
        if start_port_speed is not None:
            self.start_port_speed = start_port_speed
        if additional_info is not None:
            self.additional_info = additional_info
        if end_port_ipv4_address is not None:
            self.end_port_ipv4_address = end_port_ipv4_address
        if id is not None:
            self.id = id
        if tag is not None:
            self.tag = tag
        if start_port_ipv4_address is not None:
            self.start_port_ipv4_address = start_port_ipv4_address
        if grey_out is not None:
            self.grey_out = grey_out

    @property
    def end_port_name(self):
        """Gets the end_port_name of this TopologyResultResponseLinks.  # noqa: E501


        :return: The end_port_name of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._end_port_name

    @end_port_name.setter
    def end_port_name(self, end_port_name):
        """Sets the end_port_name of this TopologyResultResponseLinks.


        :param end_port_name: The end_port_name of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._end_port_name = end_port_name

    @property
    def start_port_id(self):
        """Gets the start_port_id of this TopologyResultResponseLinks.  # noqa: E501


        :return: The start_port_id of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._start_port_id

    @start_port_id.setter
    def start_port_id(self, start_port_id):
        """Sets the start_port_id of this TopologyResultResponseLinks.


        :param start_port_id: The start_port_id of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._start_port_id = start_port_id

    @property
    def end_port_speed(self):
        """Gets the end_port_speed of this TopologyResultResponseLinks.  # noqa: E501


        :return: The end_port_speed of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._end_port_speed

    @end_port_speed.setter
    def end_port_speed(self, end_port_speed):
        """Sets the end_port_speed of this TopologyResultResponseLinks.


        :param end_port_speed: The end_port_speed of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._end_port_speed = end_port_speed

    @property
    def start_port_ipv4_mask(self):
        """Gets the start_port_ipv4_mask of this TopologyResultResponseLinks.  # noqa: E501


        :return: The start_port_ipv4_mask of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._start_port_ipv4_mask

    @start_port_ipv4_mask.setter
    def start_port_ipv4_mask(self, start_port_ipv4_mask):
        """Sets the start_port_ipv4_mask of this TopologyResultResponseLinks.


        :param start_port_ipv4_mask: The start_port_ipv4_mask of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._start_port_ipv4_mask = start_port_ipv4_mask

    @property
    def source(self):
        """Gets the source of this TopologyResultResponseLinks.  # noqa: E501


        :return: The source of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this TopologyResultResponseLinks.


        :param source: The source of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._source = source

    @property
    def target(self):
        """Gets the target of this TopologyResultResponseLinks.  # noqa: E501


        :return: The target of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this TopologyResultResponseLinks.


        :param target: The target of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._target = target

    @property
    def link_status(self):
        """Gets the link_status of this TopologyResultResponseLinks.  # noqa: E501


        :return: The link_status of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._link_status

    @link_status.setter
    def link_status(self, link_status):
        """Sets the link_status of this TopologyResultResponseLinks.


        :param link_status: The link_status of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._link_status = link_status

    @property
    def end_port_ipv4_mask(self):
        """Gets the end_port_ipv4_mask of this TopologyResultResponseLinks.  # noqa: E501


        :return: The end_port_ipv4_mask of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._end_port_ipv4_mask

    @end_port_ipv4_mask.setter
    def end_port_ipv4_mask(self, end_port_ipv4_mask):
        """Sets the end_port_ipv4_mask of this TopologyResultResponseLinks.


        :param end_port_ipv4_mask: The end_port_ipv4_mask of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._end_port_ipv4_mask = end_port_ipv4_mask

    @property
    def end_port_id(self):
        """Gets the end_port_id of this TopologyResultResponseLinks.  # noqa: E501


        :return: The end_port_id of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._end_port_id

    @end_port_id.setter
    def end_port_id(self, end_port_id):
        """Sets the end_port_id of this TopologyResultResponseLinks.


        :param end_port_id: The end_port_id of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._end_port_id = end_port_id

    @property
    def start_port_name(self):
        """Gets the start_port_name of this TopologyResultResponseLinks.  # noqa: E501


        :return: The start_port_name of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._start_port_name

    @start_port_name.setter
    def start_port_name(self, start_port_name):
        """Sets the start_port_name of this TopologyResultResponseLinks.


        :param start_port_name: The start_port_name of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._start_port_name = start_port_name

    @property
    def start_port_speed(self):
        """Gets the start_port_speed of this TopologyResultResponseLinks.  # noqa: E501


        :return: The start_port_speed of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._start_port_speed

    @start_port_speed.setter
    def start_port_speed(self, start_port_speed):
        """Sets the start_port_speed of this TopologyResultResponseLinks.


        :param start_port_speed: The start_port_speed of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._start_port_speed = start_port_speed

    @property
    def additional_info(self):
        """Gets the additional_info of this TopologyResultResponseLinks.  # noqa: E501


        :return: The additional_info of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: object
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info):
        """Sets the additional_info of this TopologyResultResponseLinks.


        :param additional_info: The additional_info of this TopologyResultResponseLinks.  # noqa: E501
        :type: object
        """

        self._additional_info = additional_info

    @property
    def end_port_ipv4_address(self):
        """Gets the end_port_ipv4_address of this TopologyResultResponseLinks.  # noqa: E501


        :return: The end_port_ipv4_address of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._end_port_ipv4_address

    @end_port_ipv4_address.setter
    def end_port_ipv4_address(self, end_port_ipv4_address):
        """Sets the end_port_ipv4_address of this TopologyResultResponseLinks.


        :param end_port_ipv4_address: The end_port_ipv4_address of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._end_port_ipv4_address = end_port_ipv4_address

    @property
    def id(self):
        """Gets the id of this TopologyResultResponseLinks.  # noqa: E501


        :return: The id of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TopologyResultResponseLinks.


        :param id: The id of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def tag(self):
        """Gets the tag of this TopologyResultResponseLinks.  # noqa: E501


        :return: The tag of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this TopologyResultResponseLinks.


        :param tag: The tag of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._tag = tag

    @property
    def start_port_ipv4_address(self):
        """Gets the start_port_ipv4_address of this TopologyResultResponseLinks.  # noqa: E501


        :return: The start_port_ipv4_address of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: str
        """
        return self._start_port_ipv4_address

    @start_port_ipv4_address.setter
    def start_port_ipv4_address(self, start_port_ipv4_address):
        """Sets the start_port_ipv4_address of this TopologyResultResponseLinks.


        :param start_port_ipv4_address: The start_port_ipv4_address of this TopologyResultResponseLinks.  # noqa: E501
        :type: str
        """

        self._start_port_ipv4_address = start_port_ipv4_address

    @property
    def grey_out(self):
        """Gets the grey_out of this TopologyResultResponseLinks.  # noqa: E501


        :return: The grey_out of this TopologyResultResponseLinks.  # noqa: E501
        :rtype: bool
        """
        return self._grey_out

    @grey_out.setter
    def grey_out(self, grey_out):
        """Sets the grey_out of this TopologyResultResponseLinks.


        :param grey_out: The grey_out of this TopologyResultResponseLinks.  # noqa: E501
        :type: bool
        """

        self._grey_out = grey_out

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TopologyResultResponseLinks):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
