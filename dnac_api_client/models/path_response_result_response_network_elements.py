# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class PathResponseResultResponseNetworkElements(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'link_information_source': 'str',
        'role': 'str',
        'flex_connect': 'PathResponseResultResponseFlexConnect',
        'device_stats_collection': 'str',
        'ip': 'str',
        'perf_mon_collection_failure_reason': 'str',
        'perf_mon_collection': 'str',
        'type': 'str',
        'ssid': 'str',
        'wlan_id': 'str',
        'egress_virtual_interface': 'PathResponseResultResponseEgressVirtualInterface',
        'tunnels': 'list[str]',
        'device_stats_collection_failure_reason': 'str',
        'perf_mon_statistics': 'list[PathResponseResultResponsePerfMonStatistics]',
        'detailed_status': 'PathResponseResultResponseDetailedStatus',
        'ingress_virtual_interface': 'PathResponseResultResponseEgressVirtualInterface',
        'name': 'str',
        'device_statistics': 'PathResponseResultResponseDeviceStatistics',
        'ingress_physical_interface': 'PathResponseResultResponseEgressVirtualInterface',
        'accuracy_list': 'list[PathResponseResultResponseAccuracyList]',
        'id': 'str',
        'egress_physical_interface': 'PathResponseResultResponseEgressVirtualInterface'
    }

    attribute_map = {
        'link_information_source': 'linkInformationSource',
        'role': 'role',
        'flex_connect': 'flexConnect',
        'device_stats_collection': 'deviceStatsCollection',
        'ip': 'ip',
        'perf_mon_collection_failure_reason': 'perfMonCollectionFailureReason',
        'perf_mon_collection': 'perfMonCollection',
        'type': 'type',
        'ssid': 'ssid',
        'wlan_id': 'wlanId',
        'egress_virtual_interface': 'egressVirtualInterface',
        'tunnels': 'tunnels',
        'device_stats_collection_failure_reason': 'deviceStatsCollectionFailureReason',
        'perf_mon_statistics': 'perfMonStatistics',
        'detailed_status': 'detailedStatus',
        'ingress_virtual_interface': 'ingressVirtualInterface',
        'name': 'name',
        'device_statistics': 'deviceStatistics',
        'ingress_physical_interface': 'ingressPhysicalInterface',
        'accuracy_list': 'accuracyList',
        'id': 'id',
        'egress_physical_interface': 'egressPhysicalInterface'
    }

    def __init__(self, link_information_source=None, role=None, flex_connect=None, device_stats_collection=None, ip=None, perf_mon_collection_failure_reason=None, perf_mon_collection=None, type=None, ssid=None, wlan_id=None, egress_virtual_interface=None, tunnels=None, device_stats_collection_failure_reason=None, perf_mon_statistics=None, detailed_status=None, ingress_virtual_interface=None, name=None, device_statistics=None, ingress_physical_interface=None, accuracy_list=None, id=None, egress_physical_interface=None):  # noqa: E501
        """PathResponseResultResponseNetworkElements - a model defined in OpenAPI"""  # noqa: E501

        self._link_information_source = None
        self._role = None
        self._flex_connect = None
        self._device_stats_collection = None
        self._ip = None
        self._perf_mon_collection_failure_reason = None
        self._perf_mon_collection = None
        self._type = None
        self._ssid = None
        self._wlan_id = None
        self._egress_virtual_interface = None
        self._tunnels = None
        self._device_stats_collection_failure_reason = None
        self._perf_mon_statistics = None
        self._detailed_status = None
        self._ingress_virtual_interface = None
        self._name = None
        self._device_statistics = None
        self._ingress_physical_interface = None
        self._accuracy_list = None
        self._id = None
        self._egress_physical_interface = None
        self.discriminator = None

        if link_information_source is not None:
            self.link_information_source = link_information_source
        if role is not None:
            self.role = role
        if flex_connect is not None:
            self.flex_connect = flex_connect
        if device_stats_collection is not None:
            self.device_stats_collection = device_stats_collection
        if ip is not None:
            self.ip = ip
        if perf_mon_collection_failure_reason is not None:
            self.perf_mon_collection_failure_reason = perf_mon_collection_failure_reason
        if perf_mon_collection is not None:
            self.perf_mon_collection = perf_mon_collection
        if type is not None:
            self.type = type
        if ssid is not None:
            self.ssid = ssid
        if wlan_id is not None:
            self.wlan_id = wlan_id
        if egress_virtual_interface is not None:
            self.egress_virtual_interface = egress_virtual_interface
        if tunnels is not None:
            self.tunnels = tunnels
        if device_stats_collection_failure_reason is not None:
            self.device_stats_collection_failure_reason = device_stats_collection_failure_reason
        if perf_mon_statistics is not None:
            self.perf_mon_statistics = perf_mon_statistics
        if detailed_status is not None:
            self.detailed_status = detailed_status
        if ingress_virtual_interface is not None:
            self.ingress_virtual_interface = ingress_virtual_interface
        if name is not None:
            self.name = name
        if device_statistics is not None:
            self.device_statistics = device_statistics
        if ingress_physical_interface is not None:
            self.ingress_physical_interface = ingress_physical_interface
        if accuracy_list is not None:
            self.accuracy_list = accuracy_list
        if id is not None:
            self.id = id
        if egress_physical_interface is not None:
            self.egress_physical_interface = egress_physical_interface

    @property
    def link_information_source(self):
        """Gets the link_information_source of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The link_information_source of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._link_information_source

    @link_information_source.setter
    def link_information_source(self, link_information_source):
        """Sets the link_information_source of this PathResponseResultResponseNetworkElements.


        :param link_information_source: The link_information_source of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._link_information_source = link_information_source

    @property
    def role(self):
        """Gets the role of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The role of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this PathResponseResultResponseNetworkElements.


        :param role: The role of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._role = role

    @property
    def flex_connect(self):
        """Gets the flex_connect of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The flex_connect of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: PathResponseResultResponseFlexConnect
        """
        return self._flex_connect

    @flex_connect.setter
    def flex_connect(self, flex_connect):
        """Sets the flex_connect of this PathResponseResultResponseNetworkElements.


        :param flex_connect: The flex_connect of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: PathResponseResultResponseFlexConnect
        """

        self._flex_connect = flex_connect

    @property
    def device_stats_collection(self):
        """Gets the device_stats_collection of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The device_stats_collection of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._device_stats_collection

    @device_stats_collection.setter
    def device_stats_collection(self, device_stats_collection):
        """Sets the device_stats_collection of this PathResponseResultResponseNetworkElements.


        :param device_stats_collection: The device_stats_collection of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._device_stats_collection = device_stats_collection

    @property
    def ip(self):
        """Gets the ip of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The ip of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this PathResponseResultResponseNetworkElements.


        :param ip: The ip of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._ip = ip

    @property
    def perf_mon_collection_failure_reason(self):
        """Gets the perf_mon_collection_failure_reason of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The perf_mon_collection_failure_reason of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._perf_mon_collection_failure_reason

    @perf_mon_collection_failure_reason.setter
    def perf_mon_collection_failure_reason(self, perf_mon_collection_failure_reason):
        """Sets the perf_mon_collection_failure_reason of this PathResponseResultResponseNetworkElements.


        :param perf_mon_collection_failure_reason: The perf_mon_collection_failure_reason of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._perf_mon_collection_failure_reason = perf_mon_collection_failure_reason

    @property
    def perf_mon_collection(self):
        """Gets the perf_mon_collection of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The perf_mon_collection of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._perf_mon_collection

    @perf_mon_collection.setter
    def perf_mon_collection(self, perf_mon_collection):
        """Sets the perf_mon_collection of this PathResponseResultResponseNetworkElements.


        :param perf_mon_collection: The perf_mon_collection of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._perf_mon_collection = perf_mon_collection

    @property
    def type(self):
        """Gets the type of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The type of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PathResponseResultResponseNetworkElements.


        :param type: The type of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def ssid(self):
        """Gets the ssid of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The ssid of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._ssid

    @ssid.setter
    def ssid(self, ssid):
        """Sets the ssid of this PathResponseResultResponseNetworkElements.


        :param ssid: The ssid of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._ssid = ssid

    @property
    def wlan_id(self):
        """Gets the wlan_id of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The wlan_id of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._wlan_id

    @wlan_id.setter
    def wlan_id(self, wlan_id):
        """Sets the wlan_id of this PathResponseResultResponseNetworkElements.


        :param wlan_id: The wlan_id of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._wlan_id = wlan_id

    @property
    def egress_virtual_interface(self):
        """Gets the egress_virtual_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The egress_virtual_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: PathResponseResultResponseEgressVirtualInterface
        """
        return self._egress_virtual_interface

    @egress_virtual_interface.setter
    def egress_virtual_interface(self, egress_virtual_interface):
        """Sets the egress_virtual_interface of this PathResponseResultResponseNetworkElements.


        :param egress_virtual_interface: The egress_virtual_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: PathResponseResultResponseEgressVirtualInterface
        """

        self._egress_virtual_interface = egress_virtual_interface

    @property
    def tunnels(self):
        """Gets the tunnels of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The tunnels of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: list[str]
        """
        return self._tunnels

    @tunnels.setter
    def tunnels(self, tunnels):
        """Sets the tunnels of this PathResponseResultResponseNetworkElements.


        :param tunnels: The tunnels of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: list[str]
        """

        self._tunnels = tunnels

    @property
    def device_stats_collection_failure_reason(self):
        """Gets the device_stats_collection_failure_reason of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The device_stats_collection_failure_reason of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._device_stats_collection_failure_reason

    @device_stats_collection_failure_reason.setter
    def device_stats_collection_failure_reason(self, device_stats_collection_failure_reason):
        """Sets the device_stats_collection_failure_reason of this PathResponseResultResponseNetworkElements.


        :param device_stats_collection_failure_reason: The device_stats_collection_failure_reason of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._device_stats_collection_failure_reason = device_stats_collection_failure_reason

    @property
    def perf_mon_statistics(self):
        """Gets the perf_mon_statistics of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The perf_mon_statistics of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: list[PathResponseResultResponsePerfMonStatistics]
        """
        return self._perf_mon_statistics

    @perf_mon_statistics.setter
    def perf_mon_statistics(self, perf_mon_statistics):
        """Sets the perf_mon_statistics of this PathResponseResultResponseNetworkElements.


        :param perf_mon_statistics: The perf_mon_statistics of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: list[PathResponseResultResponsePerfMonStatistics]
        """

        self._perf_mon_statistics = perf_mon_statistics

    @property
    def detailed_status(self):
        """Gets the detailed_status of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The detailed_status of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: PathResponseResultResponseDetailedStatus
        """
        return self._detailed_status

    @detailed_status.setter
    def detailed_status(self, detailed_status):
        """Sets the detailed_status of this PathResponseResultResponseNetworkElements.


        :param detailed_status: The detailed_status of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: PathResponseResultResponseDetailedStatus
        """

        self._detailed_status = detailed_status

    @property
    def ingress_virtual_interface(self):
        """Gets the ingress_virtual_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The ingress_virtual_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: PathResponseResultResponseEgressVirtualInterface
        """
        return self._ingress_virtual_interface

    @ingress_virtual_interface.setter
    def ingress_virtual_interface(self, ingress_virtual_interface):
        """Sets the ingress_virtual_interface of this PathResponseResultResponseNetworkElements.


        :param ingress_virtual_interface: The ingress_virtual_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: PathResponseResultResponseEgressVirtualInterface
        """

        self._ingress_virtual_interface = ingress_virtual_interface

    @property
    def name(self):
        """Gets the name of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The name of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PathResponseResultResponseNetworkElements.


        :param name: The name of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def device_statistics(self):
        """Gets the device_statistics of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The device_statistics of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: PathResponseResultResponseDeviceStatistics
        """
        return self._device_statistics

    @device_statistics.setter
    def device_statistics(self, device_statistics):
        """Sets the device_statistics of this PathResponseResultResponseNetworkElements.


        :param device_statistics: The device_statistics of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: PathResponseResultResponseDeviceStatistics
        """

        self._device_statistics = device_statistics

    @property
    def ingress_physical_interface(self):
        """Gets the ingress_physical_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The ingress_physical_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: PathResponseResultResponseEgressVirtualInterface
        """
        return self._ingress_physical_interface

    @ingress_physical_interface.setter
    def ingress_physical_interface(self, ingress_physical_interface):
        """Sets the ingress_physical_interface of this PathResponseResultResponseNetworkElements.


        :param ingress_physical_interface: The ingress_physical_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: PathResponseResultResponseEgressVirtualInterface
        """

        self._ingress_physical_interface = ingress_physical_interface

    @property
    def accuracy_list(self):
        """Gets the accuracy_list of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The accuracy_list of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: list[PathResponseResultResponseAccuracyList]
        """
        return self._accuracy_list

    @accuracy_list.setter
    def accuracy_list(self, accuracy_list):
        """Sets the accuracy_list of this PathResponseResultResponseNetworkElements.


        :param accuracy_list: The accuracy_list of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: list[PathResponseResultResponseAccuracyList]
        """

        self._accuracy_list = accuracy_list

    @property
    def id(self):
        """Gets the id of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The id of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PathResponseResultResponseNetworkElements.


        :param id: The id of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def egress_physical_interface(self):
        """Gets the egress_physical_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501


        :return: The egress_physical_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :rtype: PathResponseResultResponseEgressVirtualInterface
        """
        return self._egress_physical_interface

    @egress_physical_interface.setter
    def egress_physical_interface(self, egress_physical_interface):
        """Sets the egress_physical_interface of this PathResponseResultResponseNetworkElements.


        :param egress_physical_interface: The egress_physical_interface of this PathResponseResultResponseNetworkElements.  # noqa: E501
        :type: PathResponseResultResponseEgressVirtualInterface
        """

        self._egress_physical_interface = egress_physical_interface

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PathResponseResultResponseNetworkElements):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
