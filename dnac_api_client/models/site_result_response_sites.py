# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class SiteResultResponseSites(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'group_name_hierarchy': 'str',
        'location_country': 'str',
        'display_name': 'str',
        'latitude': 'str',
        'name': 'str',
        'location_type': 'str',
        'id': 'str',
        'location_address': 'str',
        'parent_id': 'str',
        'longitude': 'str'
    }

    attribute_map = {
        'group_name_hierarchy': 'groupNameHierarchy',
        'location_country': 'locationCountry',
        'display_name': 'displayName',
        'latitude': 'latitude',
        'name': 'name',
        'location_type': 'locationType',
        'id': 'id',
        'location_address': 'locationAddress',
        'parent_id': 'parentId',
        'longitude': 'longitude'
    }

    def __init__(self, group_name_hierarchy=None, location_country=None, display_name=None, latitude=None, name=None, location_type=None, id=None, location_address=None, parent_id=None, longitude=None):  # noqa: E501
        """SiteResultResponseSites - a model defined in OpenAPI"""  # noqa: E501

        self._group_name_hierarchy = None
        self._location_country = None
        self._display_name = None
        self._latitude = None
        self._name = None
        self._location_type = None
        self._id = None
        self._location_address = None
        self._parent_id = None
        self._longitude = None
        self.discriminator = None

        if group_name_hierarchy is not None:
            self.group_name_hierarchy = group_name_hierarchy
        if location_country is not None:
            self.location_country = location_country
        if display_name is not None:
            self.display_name = display_name
        if latitude is not None:
            self.latitude = latitude
        if name is not None:
            self.name = name
        if location_type is not None:
            self.location_type = location_type
        if id is not None:
            self.id = id
        if location_address is not None:
            self.location_address = location_address
        if parent_id is not None:
            self.parent_id = parent_id
        if longitude is not None:
            self.longitude = longitude

    @property
    def group_name_hierarchy(self):
        """Gets the group_name_hierarchy of this SiteResultResponseSites.  # noqa: E501


        :return: The group_name_hierarchy of this SiteResultResponseSites.  # noqa: E501
        :rtype: str
        """
        return self._group_name_hierarchy

    @group_name_hierarchy.setter
    def group_name_hierarchy(self, group_name_hierarchy):
        """Sets the group_name_hierarchy of this SiteResultResponseSites.


        :param group_name_hierarchy: The group_name_hierarchy of this SiteResultResponseSites.  # noqa: E501
        :type: str
        """

        self._group_name_hierarchy = group_name_hierarchy

    @property
    def location_country(self):
        """Gets the location_country of this SiteResultResponseSites.  # noqa: E501


        :return: The location_country of this SiteResultResponseSites.  # noqa: E501
        :rtype: str
        """
        return self._location_country

    @location_country.setter
    def location_country(self, location_country):
        """Sets the location_country of this SiteResultResponseSites.


        :param location_country: The location_country of this SiteResultResponseSites.  # noqa: E501
        :type: str
        """

        self._location_country = location_country

    @property
    def display_name(self):
        """Gets the display_name of this SiteResultResponseSites.  # noqa: E501


        :return: The display_name of this SiteResultResponseSites.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this SiteResultResponseSites.


        :param display_name: The display_name of this SiteResultResponseSites.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def latitude(self):
        """Gets the latitude of this SiteResultResponseSites.  # noqa: E501


        :return: The latitude of this SiteResultResponseSites.  # noqa: E501
        :rtype: str
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this SiteResultResponseSites.


        :param latitude: The latitude of this SiteResultResponseSites.  # noqa: E501
        :type: str
        """

        self._latitude = latitude

    @property
    def name(self):
        """Gets the name of this SiteResultResponseSites.  # noqa: E501


        :return: The name of this SiteResultResponseSites.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SiteResultResponseSites.


        :param name: The name of this SiteResultResponseSites.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def location_type(self):
        """Gets the location_type of this SiteResultResponseSites.  # noqa: E501


        :return: The location_type of this SiteResultResponseSites.  # noqa: E501
        :rtype: str
        """
        return self._location_type

    @location_type.setter
    def location_type(self, location_type):
        """Sets the location_type of this SiteResultResponseSites.


        :param location_type: The location_type of this SiteResultResponseSites.  # noqa: E501
        :type: str
        """

        self._location_type = location_type

    @property
    def id(self):
        """Gets the id of this SiteResultResponseSites.  # noqa: E501


        :return: The id of this SiteResultResponseSites.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SiteResultResponseSites.


        :param id: The id of this SiteResultResponseSites.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def location_address(self):
        """Gets the location_address of this SiteResultResponseSites.  # noqa: E501


        :return: The location_address of this SiteResultResponseSites.  # noqa: E501
        :rtype: str
        """
        return self._location_address

    @location_address.setter
    def location_address(self, location_address):
        """Sets the location_address of this SiteResultResponseSites.


        :param location_address: The location_address of this SiteResultResponseSites.  # noqa: E501
        :type: str
        """

        self._location_address = location_address

    @property
    def parent_id(self):
        """Gets the parent_id of this SiteResultResponseSites.  # noqa: E501


        :return: The parent_id of this SiteResultResponseSites.  # noqa: E501
        :rtype: str
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this SiteResultResponseSites.


        :param parent_id: The parent_id of this SiteResultResponseSites.  # noqa: E501
        :type: str
        """

        self._parent_id = parent_id

    @property
    def longitude(self):
        """Gets the longitude of this SiteResultResponseSites.  # noqa: E501


        :return: The longitude of this SiteResultResponseSites.  # noqa: E501
        :rtype: str
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this SiteResultResponseSites.


        :param longitude: The longitude of this SiteResultResponseSites.  # noqa: E501
        :type: str
        """

        self._longitude = longitude

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SiteResultResponseSites):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
