# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SystemPropertyListResultResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'instance_tenant_id': 'str',
        'instance_uuid': 'str',
        'int_value': 'int',
        'system_property_name': 'str'
    }

    attribute_map = {
        'id': 'id',
        'instance_tenant_id': 'instanceTenantId',
        'instance_uuid': 'instanceUuid',
        'int_value': 'intValue',
        'system_property_name': 'systemPropertyName'
    }

    def __init__(self, id=None, instance_tenant_id=None, instance_uuid=None, int_value=None, system_property_name=None):  # noqa: E501
        """SystemPropertyListResultResponse - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._instance_tenant_id = None
        self._instance_uuid = None
        self._int_value = None
        self._system_property_name = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if instance_tenant_id is not None:
            self.instance_tenant_id = instance_tenant_id
        if instance_uuid is not None:
            self.instance_uuid = instance_uuid
        if int_value is not None:
            self.int_value = int_value
        if system_property_name is not None:
            self.system_property_name = system_property_name

    @property
    def id(self):
        """Gets the id of this SystemPropertyListResultResponse.  # noqa: E501


        :return: The id of this SystemPropertyListResultResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SystemPropertyListResultResponse.


        :param id: The id of this SystemPropertyListResultResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def instance_tenant_id(self):
        """Gets the instance_tenant_id of this SystemPropertyListResultResponse.  # noqa: E501


        :return: The instance_tenant_id of this SystemPropertyListResultResponse.  # noqa: E501
        :rtype: str
        """
        return self._instance_tenant_id

    @instance_tenant_id.setter
    def instance_tenant_id(self, instance_tenant_id):
        """Sets the instance_tenant_id of this SystemPropertyListResultResponse.


        :param instance_tenant_id: The instance_tenant_id of this SystemPropertyListResultResponse.  # noqa: E501
        :type: str
        """

        self._instance_tenant_id = instance_tenant_id

    @property
    def instance_uuid(self):
        """Gets the instance_uuid of this SystemPropertyListResultResponse.  # noqa: E501


        :return: The instance_uuid of this SystemPropertyListResultResponse.  # noqa: E501
        :rtype: str
        """
        return self._instance_uuid

    @instance_uuid.setter
    def instance_uuid(self, instance_uuid):
        """Sets the instance_uuid of this SystemPropertyListResultResponse.


        :param instance_uuid: The instance_uuid of this SystemPropertyListResultResponse.  # noqa: E501
        :type: str
        """

        self._instance_uuid = instance_uuid

    @property
    def int_value(self):
        """Gets the int_value of this SystemPropertyListResultResponse.  # noqa: E501


        :return: The int_value of this SystemPropertyListResultResponse.  # noqa: E501
        :rtype: int
        """
        return self._int_value

    @int_value.setter
    def int_value(self, int_value):
        """Sets the int_value of this SystemPropertyListResultResponse.


        :param int_value: The int_value of this SystemPropertyListResultResponse.  # noqa: E501
        :type: int
        """

        self._int_value = int_value

    @property
    def system_property_name(self):
        """Gets the system_property_name of this SystemPropertyListResultResponse.  # noqa: E501


        :return: The system_property_name of this SystemPropertyListResultResponse.  # noqa: E501
        :rtype: str
        """
        return self._system_property_name

    @system_property_name.setter
    def system_property_name(self, system_property_name):
        """Sets the system_property_name of this SystemPropertyListResultResponse.


        :param system_property_name: The system_property_name of this SystemPropertyListResultResponse.  # noqa: E501
        :type: str
        """

        self._system_property_name = system_property_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SystemPropertyListResultResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
