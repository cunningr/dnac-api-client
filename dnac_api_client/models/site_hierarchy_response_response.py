# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class SiteHierarchyResponseResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'network_health_distribution': 'str',
        'parent_site_id': 'str',
        'client_issue_count': 'str',
        'application_total_count': 'str',
        'site_name': 'str',
        'wireless_device_good_count': 'str',
        'core_good_count': 'str',
        'core_total_count': 'str',
        'access_good_count': 'str',
        'number_of_clients': 'str',
        'application_bytes_total_count': 'str',
        'application_health': 'str',
        'parent_site_name': 'str',
        'network_health_access': 'str',
        'application_good_count': 'str',
        'client_number_of_issues': 'str',
        'client_health_wireless': 'str',
        'network_health_core': 'str',
        'wired_good_clients': 'str',
        'site_type': 'str',
        'router_good_count': 'str',
        'number_of_network_device': 'str',
        'wireless_device_total_count': 'str',
        'network_health_others': 'str',
        'number_of_wired_clients': 'str',
        'healthy_clients_percentage': 'str',
        'distribution_good_count': 'str',
        'distribution_total_count': 'str',
        'wireless_good_clients': 'str',
        'router_total_count': 'str',
        'network_health_wireless': 'str',
        'network_health_average': 'str',
        'access_total_count': 'str',
        'number_of_wireless_clients': 'str',
        'site_id': 'str',
        'network_health_router': 'str',
        'overall_good_devices': 'str',
        'healthy_network_device_percentage': 'str',
        'client_health_wired': 'str',
        'network_number_of_issues': 'str'
    }

    attribute_map = {
        'network_health_distribution': 'networkHealthDistribution',
        'parent_site_id': 'parentSiteId',
        'client_issue_count': 'clientIssueCount',
        'application_total_count': 'applicationTotalCount',
        'site_name': 'siteName',
        'wireless_device_good_count': 'wirelessDeviceGoodCount',
        'core_good_count': 'coreGoodCount',
        'core_total_count': 'coreTotalCount',
        'access_good_count': 'accessGoodCount',
        'number_of_clients': 'numberOfClients',
        'application_bytes_total_count': 'applicationBytesTotalCount',
        'application_health': 'applicationHealth',
        'parent_site_name': 'parentSiteName',
        'network_health_access': 'networkHealthAccess',
        'application_good_count': 'applicationGoodCount',
        'client_number_of_issues': 'clientNumberOfIssues',
        'client_health_wireless': 'clientHealthWireless',
        'network_health_core': 'networkHealthCore',
        'wired_good_clients': 'wiredGoodClients',
        'site_type': 'siteType',
        'router_good_count': 'routerGoodCount',
        'number_of_network_device': 'numberOfNetworkDevice',
        'wireless_device_total_count': 'wirelessDeviceTotalCount',
        'network_health_others': 'networkHealthOthers',
        'number_of_wired_clients': 'numberOfWiredClients',
        'healthy_clients_percentage': 'healthyClientsPercentage',
        'distribution_good_count': 'distributionGoodCount',
        'distribution_total_count': 'distributionTotalCount',
        'wireless_good_clients': 'wirelessGoodClients',
        'router_total_count': 'routerTotalCount',
        'network_health_wireless': 'networkHealthWireless',
        'network_health_average': 'networkHealthAverage',
        'access_total_count': 'accessTotalCount',
        'number_of_wireless_clients': 'numberOfWirelessClients',
        'site_id': 'siteId',
        'network_health_router': 'networkHealthRouter',
        'overall_good_devices': 'overallGoodDevices',
        'healthy_network_device_percentage': 'healthyNetworkDevicePercentage',
        'client_health_wired': 'clientHealthWired',
        'network_number_of_issues': 'networkNumberOfIssues'
    }

    def __init__(self, network_health_distribution=None, parent_site_id=None, client_issue_count=None, application_total_count=None, site_name=None, wireless_device_good_count=None, core_good_count=None, core_total_count=None, access_good_count=None, number_of_clients=None, application_bytes_total_count=None, application_health=None, parent_site_name=None, network_health_access=None, application_good_count=None, client_number_of_issues=None, client_health_wireless=None, network_health_core=None, wired_good_clients=None, site_type=None, router_good_count=None, number_of_network_device=None, wireless_device_total_count=None, network_health_others=None, number_of_wired_clients=None, healthy_clients_percentage=None, distribution_good_count=None, distribution_total_count=None, wireless_good_clients=None, router_total_count=None, network_health_wireless=None, network_health_average=None, access_total_count=None, number_of_wireless_clients=None, site_id=None, network_health_router=None, overall_good_devices=None, healthy_network_device_percentage=None, client_health_wired=None, network_number_of_issues=None):  # noqa: E501
        """SiteHierarchyResponseResponse - a model defined in OpenAPI"""  # noqa: E501

        self._network_health_distribution = None
        self._parent_site_id = None
        self._client_issue_count = None
        self._application_total_count = None
        self._site_name = None
        self._wireless_device_good_count = None
        self._core_good_count = None
        self._core_total_count = None
        self._access_good_count = None
        self._number_of_clients = None
        self._application_bytes_total_count = None
        self._application_health = None
        self._parent_site_name = None
        self._network_health_access = None
        self._application_good_count = None
        self._client_number_of_issues = None
        self._client_health_wireless = None
        self._network_health_core = None
        self._wired_good_clients = None
        self._site_type = None
        self._router_good_count = None
        self._number_of_network_device = None
        self._wireless_device_total_count = None
        self._network_health_others = None
        self._number_of_wired_clients = None
        self._healthy_clients_percentage = None
        self._distribution_good_count = None
        self._distribution_total_count = None
        self._wireless_good_clients = None
        self._router_total_count = None
        self._network_health_wireless = None
        self._network_health_average = None
        self._access_total_count = None
        self._number_of_wireless_clients = None
        self._site_id = None
        self._network_health_router = None
        self._overall_good_devices = None
        self._healthy_network_device_percentage = None
        self._client_health_wired = None
        self._network_number_of_issues = None
        self.discriminator = None

        if network_health_distribution is not None:
            self.network_health_distribution = network_health_distribution
        if parent_site_id is not None:
            self.parent_site_id = parent_site_id
        if client_issue_count is not None:
            self.client_issue_count = client_issue_count
        if application_total_count is not None:
            self.application_total_count = application_total_count
        if site_name is not None:
            self.site_name = site_name
        if wireless_device_good_count is not None:
            self.wireless_device_good_count = wireless_device_good_count
        if core_good_count is not None:
            self.core_good_count = core_good_count
        if core_total_count is not None:
            self.core_total_count = core_total_count
        if access_good_count is not None:
            self.access_good_count = access_good_count
        if number_of_clients is not None:
            self.number_of_clients = number_of_clients
        if application_bytes_total_count is not None:
            self.application_bytes_total_count = application_bytes_total_count
        if application_health is not None:
            self.application_health = application_health
        if parent_site_name is not None:
            self.parent_site_name = parent_site_name
        if network_health_access is not None:
            self.network_health_access = network_health_access
        if application_good_count is not None:
            self.application_good_count = application_good_count
        if client_number_of_issues is not None:
            self.client_number_of_issues = client_number_of_issues
        if client_health_wireless is not None:
            self.client_health_wireless = client_health_wireless
        if network_health_core is not None:
            self.network_health_core = network_health_core
        if wired_good_clients is not None:
            self.wired_good_clients = wired_good_clients
        if site_type is not None:
            self.site_type = site_type
        if router_good_count is not None:
            self.router_good_count = router_good_count
        if number_of_network_device is not None:
            self.number_of_network_device = number_of_network_device
        if wireless_device_total_count is not None:
            self.wireless_device_total_count = wireless_device_total_count
        if network_health_others is not None:
            self.network_health_others = network_health_others
        if number_of_wired_clients is not None:
            self.number_of_wired_clients = number_of_wired_clients
        if healthy_clients_percentage is not None:
            self.healthy_clients_percentage = healthy_clients_percentage
        if distribution_good_count is not None:
            self.distribution_good_count = distribution_good_count
        if distribution_total_count is not None:
            self.distribution_total_count = distribution_total_count
        if wireless_good_clients is not None:
            self.wireless_good_clients = wireless_good_clients
        if router_total_count is not None:
            self.router_total_count = router_total_count
        if network_health_wireless is not None:
            self.network_health_wireless = network_health_wireless
        if network_health_average is not None:
            self.network_health_average = network_health_average
        if access_total_count is not None:
            self.access_total_count = access_total_count
        if number_of_wireless_clients is not None:
            self.number_of_wireless_clients = number_of_wireless_clients
        if site_id is not None:
            self.site_id = site_id
        if network_health_router is not None:
            self.network_health_router = network_health_router
        if overall_good_devices is not None:
            self.overall_good_devices = overall_good_devices
        if healthy_network_device_percentage is not None:
            self.healthy_network_device_percentage = healthy_network_device_percentage
        if client_health_wired is not None:
            self.client_health_wired = client_health_wired
        if network_number_of_issues is not None:
            self.network_number_of_issues = network_number_of_issues

    @property
    def network_health_distribution(self):
        """Gets the network_health_distribution of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The network_health_distribution of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._network_health_distribution

    @network_health_distribution.setter
    def network_health_distribution(self, network_health_distribution):
        """Sets the network_health_distribution of this SiteHierarchyResponseResponse.


        :param network_health_distribution: The network_health_distribution of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._network_health_distribution = network_health_distribution

    @property
    def parent_site_id(self):
        """Gets the parent_site_id of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The parent_site_id of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._parent_site_id

    @parent_site_id.setter
    def parent_site_id(self, parent_site_id):
        """Sets the parent_site_id of this SiteHierarchyResponseResponse.


        :param parent_site_id: The parent_site_id of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._parent_site_id = parent_site_id

    @property
    def client_issue_count(self):
        """Gets the client_issue_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The client_issue_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._client_issue_count

    @client_issue_count.setter
    def client_issue_count(self, client_issue_count):
        """Sets the client_issue_count of this SiteHierarchyResponseResponse.


        :param client_issue_count: The client_issue_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._client_issue_count = client_issue_count

    @property
    def application_total_count(self):
        """Gets the application_total_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The application_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._application_total_count

    @application_total_count.setter
    def application_total_count(self, application_total_count):
        """Sets the application_total_count of this SiteHierarchyResponseResponse.


        :param application_total_count: The application_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._application_total_count = application_total_count

    @property
    def site_name(self):
        """Gets the site_name of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The site_name of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._site_name

    @site_name.setter
    def site_name(self, site_name):
        """Sets the site_name of this SiteHierarchyResponseResponse.


        :param site_name: The site_name of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._site_name = site_name

    @property
    def wireless_device_good_count(self):
        """Gets the wireless_device_good_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The wireless_device_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._wireless_device_good_count

    @wireless_device_good_count.setter
    def wireless_device_good_count(self, wireless_device_good_count):
        """Sets the wireless_device_good_count of this SiteHierarchyResponseResponse.


        :param wireless_device_good_count: The wireless_device_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._wireless_device_good_count = wireless_device_good_count

    @property
    def core_good_count(self):
        """Gets the core_good_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The core_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._core_good_count

    @core_good_count.setter
    def core_good_count(self, core_good_count):
        """Sets the core_good_count of this SiteHierarchyResponseResponse.


        :param core_good_count: The core_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._core_good_count = core_good_count

    @property
    def core_total_count(self):
        """Gets the core_total_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The core_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._core_total_count

    @core_total_count.setter
    def core_total_count(self, core_total_count):
        """Sets the core_total_count of this SiteHierarchyResponseResponse.


        :param core_total_count: The core_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._core_total_count = core_total_count

    @property
    def access_good_count(self):
        """Gets the access_good_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The access_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._access_good_count

    @access_good_count.setter
    def access_good_count(self, access_good_count):
        """Sets the access_good_count of this SiteHierarchyResponseResponse.


        :param access_good_count: The access_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._access_good_count = access_good_count

    @property
    def number_of_clients(self):
        """Gets the number_of_clients of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The number_of_clients of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._number_of_clients

    @number_of_clients.setter
    def number_of_clients(self, number_of_clients):
        """Sets the number_of_clients of this SiteHierarchyResponseResponse.


        :param number_of_clients: The number_of_clients of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._number_of_clients = number_of_clients

    @property
    def application_bytes_total_count(self):
        """Gets the application_bytes_total_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The application_bytes_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._application_bytes_total_count

    @application_bytes_total_count.setter
    def application_bytes_total_count(self, application_bytes_total_count):
        """Sets the application_bytes_total_count of this SiteHierarchyResponseResponse.


        :param application_bytes_total_count: The application_bytes_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._application_bytes_total_count = application_bytes_total_count

    @property
    def application_health(self):
        """Gets the application_health of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The application_health of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._application_health

    @application_health.setter
    def application_health(self, application_health):
        """Sets the application_health of this SiteHierarchyResponseResponse.


        :param application_health: The application_health of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._application_health = application_health

    @property
    def parent_site_name(self):
        """Gets the parent_site_name of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The parent_site_name of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._parent_site_name

    @parent_site_name.setter
    def parent_site_name(self, parent_site_name):
        """Sets the parent_site_name of this SiteHierarchyResponseResponse.


        :param parent_site_name: The parent_site_name of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._parent_site_name = parent_site_name

    @property
    def network_health_access(self):
        """Gets the network_health_access of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The network_health_access of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._network_health_access

    @network_health_access.setter
    def network_health_access(self, network_health_access):
        """Sets the network_health_access of this SiteHierarchyResponseResponse.


        :param network_health_access: The network_health_access of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._network_health_access = network_health_access

    @property
    def application_good_count(self):
        """Gets the application_good_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The application_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._application_good_count

    @application_good_count.setter
    def application_good_count(self, application_good_count):
        """Sets the application_good_count of this SiteHierarchyResponseResponse.


        :param application_good_count: The application_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._application_good_count = application_good_count

    @property
    def client_number_of_issues(self):
        """Gets the client_number_of_issues of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The client_number_of_issues of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._client_number_of_issues

    @client_number_of_issues.setter
    def client_number_of_issues(self, client_number_of_issues):
        """Sets the client_number_of_issues of this SiteHierarchyResponseResponse.


        :param client_number_of_issues: The client_number_of_issues of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._client_number_of_issues = client_number_of_issues

    @property
    def client_health_wireless(self):
        """Gets the client_health_wireless of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The client_health_wireless of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._client_health_wireless

    @client_health_wireless.setter
    def client_health_wireless(self, client_health_wireless):
        """Sets the client_health_wireless of this SiteHierarchyResponseResponse.


        :param client_health_wireless: The client_health_wireless of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._client_health_wireless = client_health_wireless

    @property
    def network_health_core(self):
        """Gets the network_health_core of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The network_health_core of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._network_health_core

    @network_health_core.setter
    def network_health_core(self, network_health_core):
        """Sets the network_health_core of this SiteHierarchyResponseResponse.


        :param network_health_core: The network_health_core of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._network_health_core = network_health_core

    @property
    def wired_good_clients(self):
        """Gets the wired_good_clients of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The wired_good_clients of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._wired_good_clients

    @wired_good_clients.setter
    def wired_good_clients(self, wired_good_clients):
        """Sets the wired_good_clients of this SiteHierarchyResponseResponse.


        :param wired_good_clients: The wired_good_clients of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._wired_good_clients = wired_good_clients

    @property
    def site_type(self):
        """Gets the site_type of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The site_type of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._site_type

    @site_type.setter
    def site_type(self, site_type):
        """Sets the site_type of this SiteHierarchyResponseResponse.


        :param site_type: The site_type of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._site_type = site_type

    @property
    def router_good_count(self):
        """Gets the router_good_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The router_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._router_good_count

    @router_good_count.setter
    def router_good_count(self, router_good_count):
        """Sets the router_good_count of this SiteHierarchyResponseResponse.


        :param router_good_count: The router_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._router_good_count = router_good_count

    @property
    def number_of_network_device(self):
        """Gets the number_of_network_device of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The number_of_network_device of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._number_of_network_device

    @number_of_network_device.setter
    def number_of_network_device(self, number_of_network_device):
        """Sets the number_of_network_device of this SiteHierarchyResponseResponse.


        :param number_of_network_device: The number_of_network_device of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._number_of_network_device = number_of_network_device

    @property
    def wireless_device_total_count(self):
        """Gets the wireless_device_total_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The wireless_device_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._wireless_device_total_count

    @wireless_device_total_count.setter
    def wireless_device_total_count(self, wireless_device_total_count):
        """Sets the wireless_device_total_count of this SiteHierarchyResponseResponse.


        :param wireless_device_total_count: The wireless_device_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._wireless_device_total_count = wireless_device_total_count

    @property
    def network_health_others(self):
        """Gets the network_health_others of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The network_health_others of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._network_health_others

    @network_health_others.setter
    def network_health_others(self, network_health_others):
        """Sets the network_health_others of this SiteHierarchyResponseResponse.


        :param network_health_others: The network_health_others of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._network_health_others = network_health_others

    @property
    def number_of_wired_clients(self):
        """Gets the number_of_wired_clients of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The number_of_wired_clients of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._number_of_wired_clients

    @number_of_wired_clients.setter
    def number_of_wired_clients(self, number_of_wired_clients):
        """Sets the number_of_wired_clients of this SiteHierarchyResponseResponse.


        :param number_of_wired_clients: The number_of_wired_clients of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._number_of_wired_clients = number_of_wired_clients

    @property
    def healthy_clients_percentage(self):
        """Gets the healthy_clients_percentage of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The healthy_clients_percentage of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._healthy_clients_percentage

    @healthy_clients_percentage.setter
    def healthy_clients_percentage(self, healthy_clients_percentage):
        """Sets the healthy_clients_percentage of this SiteHierarchyResponseResponse.


        :param healthy_clients_percentage: The healthy_clients_percentage of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._healthy_clients_percentage = healthy_clients_percentage

    @property
    def distribution_good_count(self):
        """Gets the distribution_good_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The distribution_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._distribution_good_count

    @distribution_good_count.setter
    def distribution_good_count(self, distribution_good_count):
        """Sets the distribution_good_count of this SiteHierarchyResponseResponse.


        :param distribution_good_count: The distribution_good_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._distribution_good_count = distribution_good_count

    @property
    def distribution_total_count(self):
        """Gets the distribution_total_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The distribution_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._distribution_total_count

    @distribution_total_count.setter
    def distribution_total_count(self, distribution_total_count):
        """Sets the distribution_total_count of this SiteHierarchyResponseResponse.


        :param distribution_total_count: The distribution_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._distribution_total_count = distribution_total_count

    @property
    def wireless_good_clients(self):
        """Gets the wireless_good_clients of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The wireless_good_clients of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._wireless_good_clients

    @wireless_good_clients.setter
    def wireless_good_clients(self, wireless_good_clients):
        """Sets the wireless_good_clients of this SiteHierarchyResponseResponse.


        :param wireless_good_clients: The wireless_good_clients of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._wireless_good_clients = wireless_good_clients

    @property
    def router_total_count(self):
        """Gets the router_total_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The router_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._router_total_count

    @router_total_count.setter
    def router_total_count(self, router_total_count):
        """Sets the router_total_count of this SiteHierarchyResponseResponse.


        :param router_total_count: The router_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._router_total_count = router_total_count

    @property
    def network_health_wireless(self):
        """Gets the network_health_wireless of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The network_health_wireless of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._network_health_wireless

    @network_health_wireless.setter
    def network_health_wireless(self, network_health_wireless):
        """Sets the network_health_wireless of this SiteHierarchyResponseResponse.


        :param network_health_wireless: The network_health_wireless of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._network_health_wireless = network_health_wireless

    @property
    def network_health_average(self):
        """Gets the network_health_average of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The network_health_average of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._network_health_average

    @network_health_average.setter
    def network_health_average(self, network_health_average):
        """Sets the network_health_average of this SiteHierarchyResponseResponse.


        :param network_health_average: The network_health_average of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._network_health_average = network_health_average

    @property
    def access_total_count(self):
        """Gets the access_total_count of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The access_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._access_total_count

    @access_total_count.setter
    def access_total_count(self, access_total_count):
        """Sets the access_total_count of this SiteHierarchyResponseResponse.


        :param access_total_count: The access_total_count of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._access_total_count = access_total_count

    @property
    def number_of_wireless_clients(self):
        """Gets the number_of_wireless_clients of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The number_of_wireless_clients of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._number_of_wireless_clients

    @number_of_wireless_clients.setter
    def number_of_wireless_clients(self, number_of_wireless_clients):
        """Sets the number_of_wireless_clients of this SiteHierarchyResponseResponse.


        :param number_of_wireless_clients: The number_of_wireless_clients of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._number_of_wireless_clients = number_of_wireless_clients

    @property
    def site_id(self):
        """Gets the site_id of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The site_id of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this SiteHierarchyResponseResponse.


        :param site_id: The site_id of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._site_id = site_id

    @property
    def network_health_router(self):
        """Gets the network_health_router of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The network_health_router of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._network_health_router

    @network_health_router.setter
    def network_health_router(self, network_health_router):
        """Sets the network_health_router of this SiteHierarchyResponseResponse.


        :param network_health_router: The network_health_router of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._network_health_router = network_health_router

    @property
    def overall_good_devices(self):
        """Gets the overall_good_devices of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The overall_good_devices of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._overall_good_devices

    @overall_good_devices.setter
    def overall_good_devices(self, overall_good_devices):
        """Sets the overall_good_devices of this SiteHierarchyResponseResponse.


        :param overall_good_devices: The overall_good_devices of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._overall_good_devices = overall_good_devices

    @property
    def healthy_network_device_percentage(self):
        """Gets the healthy_network_device_percentage of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The healthy_network_device_percentage of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._healthy_network_device_percentage

    @healthy_network_device_percentage.setter
    def healthy_network_device_percentage(self, healthy_network_device_percentage):
        """Sets the healthy_network_device_percentage of this SiteHierarchyResponseResponse.


        :param healthy_network_device_percentage: The healthy_network_device_percentage of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._healthy_network_device_percentage = healthy_network_device_percentage

    @property
    def client_health_wired(self):
        """Gets the client_health_wired of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The client_health_wired of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._client_health_wired

    @client_health_wired.setter
    def client_health_wired(self, client_health_wired):
        """Sets the client_health_wired of this SiteHierarchyResponseResponse.


        :param client_health_wired: The client_health_wired of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._client_health_wired = client_health_wired

    @property
    def network_number_of_issues(self):
        """Gets the network_number_of_issues of this SiteHierarchyResponseResponse.  # noqa: E501


        :return: The network_number_of_issues of this SiteHierarchyResponseResponse.  # noqa: E501
        :rtype: str
        """
        return self._network_number_of_issues

    @network_number_of_issues.setter
    def network_number_of_issues(self, network_number_of_issues):
        """Sets the network_number_of_issues of this SiteHierarchyResponseResponse.


        :param network_number_of_issues: The network_number_of_issues of this SiteHierarchyResponseResponse.  # noqa: E501
        :type: str
        """

        self._network_number_of_issues = network_number_of_issues

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SiteHierarchyResponseResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
