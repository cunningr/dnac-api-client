# coding: utf-8

"""
    Cisco DNA Center Platform v. 1.2.x (EFT)

    REST API (EFT)  # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class PathResponseResultResponseEgressVirtualInterface(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'acl_analysis': 'PathResponseResultResponseFlexConnectEgressAclAnalysis',
        'path_overlay_info': 'list[PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo]',
        'qos_stats_collection': 'str',
        'interface_statistics': 'PathResponseResultResponseEgressVirtualInterfaceInterfaceStatistics',
        'name': 'str',
        'qos_stats_collection_failure_reason': 'str',
        'used_vlan': 'str',
        'id': 'str',
        'interface_stats_collection': 'str',
        'interface_stats_collection_failure_reason': 'str',
        'qos_statistics': 'list[PathResponseResultResponseEgressVirtualInterfaceQosStatistics]',
        'vrf_name': 'str'
    }

    attribute_map = {
        'acl_analysis': 'aclAnalysis',
        'path_overlay_info': 'pathOverlayInfo',
        'qos_stats_collection': 'qosStatsCollection',
        'interface_statistics': 'interfaceStatistics',
        'name': 'name',
        'qos_stats_collection_failure_reason': 'qosStatsCollectionFailureReason',
        'used_vlan': 'usedVlan',
        'id': 'id',
        'interface_stats_collection': 'interfaceStatsCollection',
        'interface_stats_collection_failure_reason': 'interfaceStatsCollectionFailureReason',
        'qos_statistics': 'qosStatistics',
        'vrf_name': 'vrfName'
    }

    def __init__(self, acl_analysis=None, path_overlay_info=None, qos_stats_collection=None, interface_statistics=None, name=None, qos_stats_collection_failure_reason=None, used_vlan=None, id=None, interface_stats_collection=None, interface_stats_collection_failure_reason=None, qos_statistics=None, vrf_name=None):  # noqa: E501
        """PathResponseResultResponseEgressVirtualInterface - a model defined in OpenAPI"""  # noqa: E501

        self._acl_analysis = None
        self._path_overlay_info = None
        self._qos_stats_collection = None
        self._interface_statistics = None
        self._name = None
        self._qos_stats_collection_failure_reason = None
        self._used_vlan = None
        self._id = None
        self._interface_stats_collection = None
        self._interface_stats_collection_failure_reason = None
        self._qos_statistics = None
        self._vrf_name = None
        self.discriminator = None

        if acl_analysis is not None:
            self.acl_analysis = acl_analysis
        if path_overlay_info is not None:
            self.path_overlay_info = path_overlay_info
        if qos_stats_collection is not None:
            self.qos_stats_collection = qos_stats_collection
        if interface_statistics is not None:
            self.interface_statistics = interface_statistics
        if name is not None:
            self.name = name
        if qos_stats_collection_failure_reason is not None:
            self.qos_stats_collection_failure_reason = qos_stats_collection_failure_reason
        if used_vlan is not None:
            self.used_vlan = used_vlan
        if id is not None:
            self.id = id
        if interface_stats_collection is not None:
            self.interface_stats_collection = interface_stats_collection
        if interface_stats_collection_failure_reason is not None:
            self.interface_stats_collection_failure_reason = interface_stats_collection_failure_reason
        if qos_statistics is not None:
            self.qos_statistics = qos_statistics
        if vrf_name is not None:
            self.vrf_name = vrf_name

    @property
    def acl_analysis(self):
        """Gets the acl_analysis of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The acl_analysis of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: PathResponseResultResponseFlexConnectEgressAclAnalysis
        """
        return self._acl_analysis

    @acl_analysis.setter
    def acl_analysis(self, acl_analysis):
        """Sets the acl_analysis of this PathResponseResultResponseEgressVirtualInterface.


        :param acl_analysis: The acl_analysis of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: PathResponseResultResponseFlexConnectEgressAclAnalysis
        """

        self._acl_analysis = acl_analysis

    @property
    def path_overlay_info(self):
        """Gets the path_overlay_info of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The path_overlay_info of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: list[PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo]
        """
        return self._path_overlay_info

    @path_overlay_info.setter
    def path_overlay_info(self, path_overlay_info):
        """Sets the path_overlay_info of this PathResponseResultResponseEgressVirtualInterface.


        :param path_overlay_info: The path_overlay_info of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: list[PathResponseResultResponseEgressVirtualInterfacePathOverlayInfo]
        """

        self._path_overlay_info = path_overlay_info

    @property
    def qos_stats_collection(self):
        """Gets the qos_stats_collection of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The qos_stats_collection of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: str
        """
        return self._qos_stats_collection

    @qos_stats_collection.setter
    def qos_stats_collection(self, qos_stats_collection):
        """Sets the qos_stats_collection of this PathResponseResultResponseEgressVirtualInterface.


        :param qos_stats_collection: The qos_stats_collection of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: str
        """

        self._qos_stats_collection = qos_stats_collection

    @property
    def interface_statistics(self):
        """Gets the interface_statistics of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The interface_statistics of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: PathResponseResultResponseEgressVirtualInterfaceInterfaceStatistics
        """
        return self._interface_statistics

    @interface_statistics.setter
    def interface_statistics(self, interface_statistics):
        """Sets the interface_statistics of this PathResponseResultResponseEgressVirtualInterface.


        :param interface_statistics: The interface_statistics of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: PathResponseResultResponseEgressVirtualInterfaceInterfaceStatistics
        """

        self._interface_statistics = interface_statistics

    @property
    def name(self):
        """Gets the name of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The name of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PathResponseResultResponseEgressVirtualInterface.


        :param name: The name of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def qos_stats_collection_failure_reason(self):
        """Gets the qos_stats_collection_failure_reason of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The qos_stats_collection_failure_reason of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: str
        """
        return self._qos_stats_collection_failure_reason

    @qos_stats_collection_failure_reason.setter
    def qos_stats_collection_failure_reason(self, qos_stats_collection_failure_reason):
        """Sets the qos_stats_collection_failure_reason of this PathResponseResultResponseEgressVirtualInterface.


        :param qos_stats_collection_failure_reason: The qos_stats_collection_failure_reason of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: str
        """

        self._qos_stats_collection_failure_reason = qos_stats_collection_failure_reason

    @property
    def used_vlan(self):
        """Gets the used_vlan of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The used_vlan of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: str
        """
        return self._used_vlan

    @used_vlan.setter
    def used_vlan(self, used_vlan):
        """Sets the used_vlan of this PathResponseResultResponseEgressVirtualInterface.


        :param used_vlan: The used_vlan of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: str
        """

        self._used_vlan = used_vlan

    @property
    def id(self):
        """Gets the id of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The id of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PathResponseResultResponseEgressVirtualInterface.


        :param id: The id of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def interface_stats_collection(self):
        """Gets the interface_stats_collection of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The interface_stats_collection of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: str
        """
        return self._interface_stats_collection

    @interface_stats_collection.setter
    def interface_stats_collection(self, interface_stats_collection):
        """Sets the interface_stats_collection of this PathResponseResultResponseEgressVirtualInterface.


        :param interface_stats_collection: The interface_stats_collection of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: str
        """

        self._interface_stats_collection = interface_stats_collection

    @property
    def interface_stats_collection_failure_reason(self):
        """Gets the interface_stats_collection_failure_reason of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The interface_stats_collection_failure_reason of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: str
        """
        return self._interface_stats_collection_failure_reason

    @interface_stats_collection_failure_reason.setter
    def interface_stats_collection_failure_reason(self, interface_stats_collection_failure_reason):
        """Sets the interface_stats_collection_failure_reason of this PathResponseResultResponseEgressVirtualInterface.


        :param interface_stats_collection_failure_reason: The interface_stats_collection_failure_reason of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: str
        """

        self._interface_stats_collection_failure_reason = interface_stats_collection_failure_reason

    @property
    def qos_statistics(self):
        """Gets the qos_statistics of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The qos_statistics of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: list[PathResponseResultResponseEgressVirtualInterfaceQosStatistics]
        """
        return self._qos_statistics

    @qos_statistics.setter
    def qos_statistics(self, qos_statistics):
        """Sets the qos_statistics of this PathResponseResultResponseEgressVirtualInterface.


        :param qos_statistics: The qos_statistics of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: list[PathResponseResultResponseEgressVirtualInterfaceQosStatistics]
        """

        self._qos_statistics = qos_statistics

    @property
    def vrf_name(self):
        """Gets the vrf_name of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501


        :return: The vrf_name of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :rtype: str
        """
        return self._vrf_name

    @vrf_name.setter
    def vrf_name(self, vrf_name):
        """Sets the vrf_name of this PathResponseResultResponseEgressVirtualInterface.


        :param vrf_name: The vrf_name of this PathResponseResultResponseEgressVirtualInterface.  # noqa: E501
        :type: str
        """

        self._vrf_name = vrf_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PathResponseResultResponseEgressVirtualInterface):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
